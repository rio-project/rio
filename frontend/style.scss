@use '@material/circular-progress';
@use '@material/floating-label/mdc-floating-label';
@use '@material/line-ripple/mdc-line-ripple';
@use '@material/linear-progress';
@use '@material/notched-outline/mdc-notched-outline';
@use '@material/ripple';
@use '@material/slider/styles' as sliderStyles;
@use '@material/switch/styles' as switchStyles;
@use '@material/textfield';

@include linear-progress.core-styles;
@include textfield.core-styles;

// Used to highlight problems with the UI to the developer, such as
// undefined space
$reflex-developer-error-color: #ff9e03;

// Not visible here:
//
// JavaScript sets global theming variables, of the form `--reflex-global-...`.

// Theme Switcheroos
.reflex-switcheroo-primary {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-accent-color);
    --reflex-local-accent-color-variant: var(
        --reflex-global-accent-color-variant
    );

    // Surface
    --reflex-local-surface-color: var(--reflex-global-primary-color);
    --reflex-local-surface-color-variant: var(
        --reflex-global-primary-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-global-text-on-accent-color);

    // Material Design Web
    // TODO
}

.reflex-switcheroo-accent {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-primary-color);
    --reflex-local-accent-color-variant: var(
        --reflex-global-primary-color-variant
    );

    // Surface
    --reflex-local-surface-color: var(--reflex-global-accent-color);
    --reflex-local-surface-color-variant: var(
        --reflex-global-accent-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-global-text-on-primary-color);

    // Material Design Web
    // TODO
}

.reflex-switcheroo-success {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-success-color);
    --reflex-local-accent-color-variant: var(
        --reflex-global-success-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-global-text-on-success-color);

    // Material Design Web
    // TODO
}

.reflex-switcheroo-warning {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-warning-color);
    --reflex-local-accent-color-variant: var(
        --reflex-global-warning-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-global-text-on-warning-color);

    // Material Design Web
    // TODO
}

.reflex-switcheroo-danger {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-danger-color);
    --reflex-local-accent-color-variant: var(
        --reflex-global-danger-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-global-text-on-danger-color);

    // Material Design Web
    // TODO
}

.reflex-switcheroo-text {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-local-text-color);
    --reflex-local-accent-color-variant: var(--reflex-local-text-color);

    // Text styles
    --reflex-local-text-color: var(--reflex-local-text-color);

    // Material Design Web
    // TODO
}

.reflex-switcheroo-default {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-accent-color);
    --reflex-local-accent-color-variant: var(
        --reflex-global-accent-color-variant
    );

    // Surface
    --reflex-local-surface-color: var(--reflex-global-surface-color);
    --reflex-local-surface-color-variant: var(
        --reflex-global-surface-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-global-text-on-surface-color);

    // Material Design Web
    --mdc-theme-primary: var(--reflex-global-accent-color);
    --mdc-theme-secondary: var(--reflex-global-accent-color-variant);
    --mdc-theme-surface: var(--reflex-global-surface-color);
    --mdc-theme-background: var(--reflex-global-background-color);

    --mdc-theme-on-primary: var(--reflex-global-text-on-surface-color);
    --mdc-theme-on-secondary: var(--reflex-global-text-on-surface-color);
    --mdc-theme-on-surface: var(--reflex-global-text-on-surface-color);
}

.reflex-switcheroo-disabled {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-disabled-color);
    --reflex-local-accent-color-variant: var(
        --reflex-global-disabled-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-global-text-on-surface-color);

    // Material Design Web
    // TODO
}

.reflex-switcheroo-custom {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-local-custom-color);
    --reflex-local-accent-color-variant: var(
        --reflex-local-custom-color-variant
    );

    // Text styles
    --reflex-local-text-color: var(--reflex-local-custom-text-color);

    // Material Design Web
    // TODO
}

// General
.reflex-single-container > * {
    width: 100%;
    height: 100%;
}

html {
    background: var(--reflex-global-background-color);
}

body {
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
    font-family: Roboto, sans-serif;
}

.reflex-widget {
    box-sizing: border-box;
}

// Align
.reflex-align > * {
    pointer-events: none;
    position: relative;
}

// Margin
.reflex-margin > * {
    pointer-events: none;
    position: relative;
    width: 100%;
    height: 100%;
}

// Column
.reflex-column {
    pointer-events: none;
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

// Row
.reflex-row {
    pointer-events: none;
    display: flex;
    flex-direction: row;
    align-items: stretch;
}

// Undefined Space Highlight
@keyframes moveRight {
    0% {
        background-position: 0 0;
    }

    100% {
        background-position: 1.4142135623730951em 0;
    }
}

.reflex-undefined-space {
    pointer-events: auto;
    flex-grow: 1;

    background-image: repeating-linear-gradient(
        -45deg,
        black 0,
        black 0.5em,
        $reflex-developer-error-color 0.5em,
        $reflex-developer-error-color 1em
    );
    animation: moveRight 0.7s linear infinite;
}

// Grid
.reflex-grid {
    pointer-events: none;
    display: grid;
}

// Text
.reflex-text {
    pointer-events: auto;
    display: flex;
    align-items: center;
    justify-content: center;

    color: var(--reflex-local-text-color);
}

// Rectangle
.reflex-rectangle {
    pointer-events: auto;
    border-style: solid;

    transition-timing-function: ease; // The transition time is set via JS

    /*
    The following attributes are controlled via variables, to allow JavaScript
    to change them, even on pseudo-classes.
    */
    background: var(--rectangle-background);
    border-color: var(--rectangle-stroke-color);
    border-width: var(--rectangle-stroke-width);
    border-radius: var(--rectangle-corner-radius-top-left)
        var(--rectangle-corner-radius-top-right)
        var(--rectangle-corner-radius-bottom-right)
        var(--rectangle-corner-radius-bottom-left);
    box-shadow: var(--rectangle-shadow-offset-x)
        var(--rectangle-shadow-offset-y) var(--rectangle-shadow-radius)
        var(--rectangle-shadow-color);
}

.reflex-rectangle-ripple {
    overflow: hidden;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.reflex-rectangle-hover:hover {
    background: var(--rectangle-background-hover);
    border-color: var(--rectangle-stroke-color-hover);
    border-width: var(--rectangle-stroke-width-hover);
    border-radius: var(--rectangle-corner-radius-top-left-hover)
        var(--rectangle-corner-radius-top-right-hover)
        var(--rectangle-corner-radius-bottom-right-hover)
        var(--rectangle-corner-radius-bottom-left-hover);
    box-shadow: var(--rectangle-shadow-offset-x-hover)
        var(--rectangle-shadow-offset-y-hover)
        var(--rectangle-shadow-radius-hover) var(--rectangle-shadow-color-hover);
}

// Stack
.reflex-stack {
    pointer-events: none;
    display: grid;
}

.reflex-stack > * {
    grid-column-start: 1;
    grid-row-start: 1;
}

// Switch
.reflex-switch .container {
    pointer-events: auto;
    position: relative;
    width: 3.182rem;
    height: 1.548rem;
    margin: auto;
    border-radius: 4.3rem;
    background-color: var(--reflex-global-disabled-color-variant);
    transition: 0.3s ease all;
    z-index: 1;
}

.reflex-switch.is-on .container {
    background-color: var(--reflex-local-accent-color);
}

.reflex-switch input {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    opacity: 0;
    cursor: pointer;
    z-index: 3;
}

.reflex-switch .knob {
    z-index: 2;
    position: absolute;
    top: 0.172rem;
    left: 0.172rem;
    width: 0.86rem;
    height: 0.43rem;
    padding: 0.387em 0.172rem;
    background-color: var(--reflex-global-disabled-color);
    border-radius: 50%;
    transition:
        0.3s ease all,
        left 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15);
}

.reflex-switch input:active + .knob {
    width: 1.978rem;
    border-radius: 4.3rem;
}

.reflex-switch.is-on input:active + .knob {
    margin-left: -1.118rem;
}

.reflex-switch.is-on input + .knob {
    left: 1.806rem;
    background-color: var(--reflex-local-surface-color);
}

// Dropdown
.reflex-dropdown {
    pointer-events: auto;
    min-height: 2rem;

    background-color: var(--reflex-local-surface-color-variant);
    color: var(--reflex-local-text-color);
    caret-color: var(--reflex-local-accent-color);

    border-radius: var(--reflex-global-corner-radius);
    border: 1.5px solid transparent;

    padding: 0.3em 0.5rem;
    text-align: center;
    outline: none;
}

.reflex-dropdown:hover {
    border: 1.5px solid var(--reflex-local-accent-color);
}

// Progress Circle
.reflex-progress-circle {
    pointer-events: auto;
    width: 0;
    height: 0;
    stroke: var(--reflex-local-accent-color);
}

.reflex-progress-circle circle {
    fill: none;
    stroke-width: 3.5;
    color: var(--reflex-local-accent-color);
}

.spinning svg {
    transform-origin: center;
    animation: rotate 2s linear infinite;
}

.spinning .progress {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
}

.spinning .background {
    stroke: none;
}

.reflex-progress-circle:not(.spinning) .progress {
    stroke-dashoffset: -94.25;
    stroke-dasharray: var(--dasharray);
    transition: stroke-dasharray 0.5s ease;
}

.reflex-progress-circle:not(.spinning) .background {
    stroke: var(--background-color);
}

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dash {
    0% {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 90, 200;
        stroke-dashoffset: -35px;
    }
    100% {
        stroke-dashoffset: -125px;
    }
}

// Button
.reflex-button {
    pointer-events: auto;
    transition:
        background-color 0.1s ease-in-out,
        color 0.1s ease-in-out,
        border-color 0.1s ease-in-out;

    overflow: hidden; // Needed for the ripple effect
}

.reflex-button > * {
    min-height: 2.2rem;
}

.reflex-button:not(.reflex-switcheroo-disabled) {
    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.reflex-buttonstyle-major {
    background: var(--reflex-local-accent-color);
    font-weight: bold;
}

.reflex-buttonstyle-major:hover:not(.reflex-switcheroo-disabled) {
    background: var(--reflex-local-accent-color);
    cursor: pointer;
}

.reflex-buttonstyle-minor {
    outline: 0.1em solid var(--reflex-local-accent-color);
    --reflex-local-text-color: var(--reflex-local-accent-color);
}

.reflex-buttonstyle-minor:hover:not(.reflex-switcheroo-disabled) {
    background: var(--reflex-local-accent-color);
    --reflex-local-text-color: var(--reflex-local-text-color);
    cursor: pointer;
}

// Shapes
.reflex-shape-pill {
    border-radius: 99999px;
}

.reflex-shape-rounded {
    border-radius: var(--reflex-global-corner-radius);
}

.reflex-shape-rectangle {
    border-radius: 0; // Not necessary, just for consistency
}

.reflex-shape-circle {
    border-radius: 50%;
}

// Revealer
.reflex-revealer-header {
    pointer-events: auto;
    cursor: pointer;
    padding: 0.8rem;
    width: 100%;
    text-align: left;
    display: flex;
    flex-direction: row;
    color: var(--reflex-local-text-color);
}

.reflex-revealer-label {
    flex-grow: 1;
}

.reflex-revealer-arrow {
    width: 1.3rem;
    height: 1.3rem;
    margin-left: 0.5rem;
    margin-right: 0.5rem;

    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.12 9.29 12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z"/></svg>');
    background-size: 100% 100%;
    fill: var(--reflex-local-text-color);
    opacity: 0.7;

    transform: rotate(90deg);
    transition: transform 0.3s ease-in-out;
}

.expanded .reflex-revealer-arrow {
    transform: rotate(0deg);
}

.reflex-revealer-content-outer {
    overflow: hidden;
    transition: max-height 0.15s ease-in-out;
}

.reflex-revealer-content-inner {
    padding: 0.8rem;
    transition:
        opacity 0.3s ease-in-out,
        transform 0.3s ease;
}

// Icon
.reflex-icon {
    pointer-events: auto;
    display: flex;
    align-items: center;
    justify-content: center;
}

// Error popup
.reflex-error-popup {
    pointer-events: auto;
    position: fixed;
    top: 2rem;
    left: 50%;
    width: unset;
    height: unset;
    transform: translateX(-50%);
    background: var(--reflex-global-surface-color-variant);
    color: var(--reflex-global-danger-color);
    font-weight: bold;
    padding: 1.5rem;
    border-radius: 99999px;
    box-shadow: 0 0 0.6em rgba(0, 0, 0, 0.5);
}

// Slideshow
.reflex-slideshow {
    pointer-events: auto;
    position: relative;
    overflow: hidden;
}

.slideshow-child-container {
    position: relative;
    display: grid;
    width: 100%;
    height: 100%;
}

.slideshow-child-container > div {
    grid-column-start: 1;
    grid-row-start: 1;
    width: 100%;
    height: 100%;
}

.slideshow-child-container > div > * {
    grid-column-start: 1;
    grid-row-start: 1;
    width: 100%;
    height: 100%;
}

.slideshow-progress {
    position: absolute;
    bottom: 0;

    width: 100%;
    height: 0.3rem;
    background-color: var(--reflex-local-accent-color);
}

// Sticky
.reflex-sticky {
    pointer-events: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 99999;
}
