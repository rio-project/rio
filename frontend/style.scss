@use '@material/slider/styles';
@use '@material/ripple';

:root {
    // Theming variables. These are injected by the Python server before serving
    // the page.
    --reflex-global-primary-color: var(--TEMPLATE_primary_color);
    --reflex-global-accent-color: var(--TEMPLATE_accent_color);

    --reflex-background-color: var(--TEMPLATE_background_color);
    --reflex-neutral-color: var(--TEMPLATE_neutral_color);
    --reflex-neutral-contrast-color: var(--TEMPLATE_neutral_contrast_color);

    --reflex-global-heading-on-neutral-color: var(
        --TEMPLATE_heading_on_neutral_color
    );
    --reflex-global-subheading-on-neutral-color: var(
        --TEMPLATE_subheading_on_neutral_color
    );
    --reflex-global-text-on-neutral-color: var(
        --TEMPLATE_text_on_neutral_color
    );

    --reflex-corner-radius: var(--TEMPLATE_corner_radius);

    // Expose the theme colors to the material widgets
    --mdc-theme-primary: var(--reflex-global-primary-color);
    --mdc-theme-secondary: var(--reflex-global-accent-color);
    --mdc-theme-background: var(--reflex-background-color);

    --mdc-theme-on-primary: var(--reflex-global-text-on-neutral-color);
    --mdc-theme-on-secondary: var(--reflex-global-text-on-neutral-color);
    --mdc-theme-on-surface: var(--reflex-global-text-on-neutral-color);
}

// Theme Switcheroos
.reflex-switcheroo-primary {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-accent-color);

    // Text styles
    --reflex-local-text-on-neutral-color: var(
        --reflex-global-text-on-neutral-color
    );
}

.reflex-switcheroo-neutral {
    // Theme colors
    --reflex-local-accent-color: var(--reflex-global-primary-color);

    // Text styles
    --reflex-local-text-on-neutral-color: var(
        --reflex-global-text-on-neutral-color
    );
}

.reflex-switcheroo-disabled {
    // Theme colors
    --reflex-local-accent-color: #777777;

    // Text styles
    --reflex-local-text-on-neutral-color: #aaaaaa;
}

// General
.reflex-single-container > * {
    width: 100%;
    height: 100%;
}

body {
    width: 100vw;
    height: 100vh;
    margin: 0;
    padding: 0;
    font-family: Roboto, sans-serif;
    font-size: 16px;
    background: var(--reflex-background-color);
}

.reflex-widget {
    box-sizing: border-box;
}

// Align
.reflex-align > * {
    position: relative;
}

// Margin
.reflex-margin > * {
    position: relative;
}

// Column
.reflex-column {
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

// Row
.reflex-row {
    display: flex;
    flex-direction: row;
    align-items: stretch;
}

// Text
.reflex-text {
    display: flex;
    align-items: center;
    justify-content: center;
}

// Rectangle
.reflex-rectangle {
    border-style: solid;

    transition-timing-function: ease; // The transition time is set via JS

    /*
    The following attributes are controlled via variables, to allow JavaScript
    to change them, even on pseudo-classes.
    */
    background: var(--rectangle-background);
    border-color: var(--rectangle-stroke-color);
    border-width: var(--rectangle-stroke-width);
    border-radius: var(--rectangle-corner-radius-top-left)
        var(--rectangle-corner-radius-top-right)
        var(--rectangle-corner-radius-bottom-right)
        var(--rectangle-corner-radius-bottom-left);
    box-shadow: var(--rectangle-shadow-offset-x)
        var(--rectangle-shadow-offset-y) var(--rectangle-shadow-radius)
        var(--rectangle-shadow-color);
}

.reflex-rectangle-hover:hover {
    background: var(--rectangle-background-hover);
    border-color: var(--rectangle-stroke-color-hover);
    border-width: var(--rectangle-stroke-width-hover);
    border-radius: var(--rectangle-corner-radius-top-left-hover)
        var(--rectangle-corner-radius-top-right-hover)
        var(--rectangle-corner-radius-bottom-right-hover)
        var(--rectangle-corner-radius-bottom-left-hover);
    box-shadow: var(--rectangle-shadow-offset-x-hover)
        var(--rectangle-shadow-offset-y-hover)
        var(--rectangle-shadow-radius-hover) var(--rectangle-shadow-color-hover);
}

// Stack
.reflex-stack > * {
    position: absolute;

    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
}

// Text Input
.reflex-text-input {
    min-height: 1.2rem;

    background-color: var(--reflex-neutral-contrast-color);
    color: black;
    caret-color: var(--reflex-local-accent-color);

    border-radius: var(--reflex-global-corner-radius);
    border: 1.5px solid transparent;

    padding: 0.3rem 0.5rem;
    text-align: center;
    outline: none;

    transition: background-color 0.5 ease-in-out;
    -moz-transition: background-color 0.5 ease-in-out;

    transition: border 0.1 ease-in-out;
    -moz-transition: border 0.1 ease-in-out;
}

.reflex-text-input:hover {
    background-color: var(--reflex-neutral-color);
    border: 1.5px solid var(--reflex-local-accent-color);
}

.reflex-text-input:focus {
    background-color: var(--reflex-neutral-color);
    border: 1.5px solid var(--reflex-local-accent-color);
}

::placeholder {
    color: #777777;
}

// Dropdown
.reflex-dropdown {
    min-height: 2rem;

    background-color: var(--reflex-neutral-contrast-color);
    color: black;
    caret-color: var(--reflex-local-accent-color);

    border-radius: var(--reflex-global-corner-radius);
    border: 1.5px solid transparent;

    padding: 0.3rem 0.5rem;
    text-align: center;
    outline: none;
}

.reflex-dropdown:hover {
    background-color: var(--reflex-neutral-color);
    border: 1.5px solid var(--reflex-local-accent-color);
}

// Progress Circle
.reflex-progress-circle {
    width: 0;
    height: 0;
}

.reflex-progress-circle circle {
    fill: none;
    stroke-width: 3.5;
}

.spinning svg {
    transform-origin: center;
    animation: rotate 2s linear infinite;
}

.spinning .progress {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
}

.spinning .background {
    stroke: none;
}

.reflex-progress-circle:not(.spinning) .progress {
    stroke-dashoffset: -94.25;
    stroke-dasharray: var(--dasharray);
    transition: stroke-dasharray 0.5s ease;
}

.reflex-progress-circle:not(.spinning) .background {
    stroke: var(--background-color);
}

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dash {
    0% {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 90, 200;
        stroke-dashoffset: -35px;
    }
    100% {
        stroke-dashoffset: -125px;
    }
}

// Switch
.reflex-switch .container {
    position: relative;
    width: 3.182em;
    height: 1.548em;
    margin: auto;
    border-radius: 4.3em;
    background-color: var(--switch-background-color-off);
    transition: 0.3s ease all;
    z-index: 1;
}

.reflex-switch.is-on .container {
    background-color: var(--switch-background-color-on);
}

.reflex-switch input {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    opacity: 0;
    cursor: pointer;
    z-index: 3;
}

.reflex-switch .knob {
    z-index: 2;
    position: absolute;
    top: 0.172em;
    left: 0.172em;
    width: 0.86em;
    height: 0.43em;
    padding: 0.387em 0.172em;
    background-color: var(--switch-knob-color-off);
    border-radius: 50%;
    transition: 0.3s ease all, left 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15);
}

.reflex-switch input:active + .knob {
    width: 1.978em;
    border-radius: 4.3em;
}

.reflex-switch.is-on input:active + .knob {
    margin-left: -1.118em;
}

.reflex-switch.is-on input + .knob {
    left: 1.806em;
    background-color: var(--switch-knob-color-on);
}

// Button
.reflex-button {
    transition: background-color 0.2 ease-in-out, color 0.2 ease-in-out,
        border-color 0.2 ease-in-out;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.reflex-buttonstyle-major {
    background: var(--local-accent-color);
    color: var(--local-text-color);
}

.reflex-buttonstyle-major:hover {
    background: var(--local-accent-color);
    color: var(--local-text-color);
}

.reflex-buttonstyle-minor {
    color: var(--local-accent-color);
    outline: 0.15em solid var(--local-accent-color);
}

.reflex-buttonstyle-minor:hover {
    color: var(--local-text-color);
    background: var(--local-accent-color);
}

.reflex-shape-rounded {
    border-radius: 9999px;
}

.reflex-shape-rectangular {
    border-radius: var(--reflex-global-corner-radius);
}

.reflex-shape-circle {
    border-radius: 50%;
}
