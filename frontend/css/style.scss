@use '@material/circular-progress';
@use '@material/floating-label/mdc-floating-label';
@use '@material/line-ripple/mdc-line-ripple';
@use '@material/linear-progress';
@use '@material/notched-outline/mdc-notched-outline';
@use '@material/ripple';
@use '@material/slider/styles' as sliderStyles;
@use '@material/switch/styles' as switchStyles;
@use 'sass:meta';

@use 'fonts.scss';

@include linear-progress.core-styles;

// Light / Dark highlight.js themes
//
// Switch between these by setting the `data-theme` attribute on the `html`
html[data-theme='light'] {
    @include meta.load-css('highlightjs-default-light.css');
}

html[data-theme='dark'] {
    @include meta.load-css('highlightjs-default-dark.css');
}

// Not visible here:
//
// JavaScript sets global theming variables, of the form `--rio-global-...`.

// Z-indices for components which are expected to show up on top
$z-index-overlay: 10000;
$z-index-popup: 10001;
$z-index-error-popup: 10002;
$z-index-debugger-highlighter: 10003;
$z-index-debugger: 10004;

// "Infinite" corner radius, for creating pill shapes
$infinite-corner-radius: 99999px;

// Nonstandard transition timing function
$transition-timing-overshoot: cubic-bezier(0.5, 0.5, 0.2, 1.14);

// Theme Switcheroos
.rio-switcheroo-background {
    // surface := primary
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-background-bg);
    --rio-local-plain-bg-variant: var(--rio-global-background-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-background-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-heading1-color);
    --rio-local-heading1-background: var(--rio-global-heading1-background);
    --rio-local-heading1-background-clip: var(
        --rio-global-heading1-background-clip
    );
    --rio-local-heading1-fill-color: var(--rio-global-heading1-fill-color);
    --rio-local-heading1-font-weight: var(--rio-global-heading1-font-weight);

    --rio-local-heading2-color: var(--rio-global-heading2-color);
    --rio-local-heading2-background: var(--rio-global-heading2-background);
    --rio-local-heading2-background-clip: var(
        --rio-global-heading2-background-clip
    );
    --rio-local-heading2-fill-color: var(--rio-global-heading2-fill-color);
    --rio-local-heading2-font-weight: var(--rio-global-heading2-font-weight);

    --rio-local-heading3-color: var(--rio-global-heading3-color);
    --rio-local-heading3-background: var(--rio-global-heading3-background);
    --rio-local-heading3-background-clip: var(
        --rio-global-heading3-background-clip
    );
    --rio-local-heading3-fill-color: var(--rio-global-heading3-fill-color);
    --rio-local-heading3-font-weight: var(--rio-global-heading3-font-weight);

    --rio-local-text-color: var(--rio-global-text-color);
    --rio-local-text-background: var(--rio-global-text-background);
    --rio-local-text-background-clip: var(--rio-global-text-background-clip);
    --rio-local-text-fill-color: var(--rio-global-text-fill-color);
    --rio-local-text-font-weight: var(--rio-global-text-font-weight);

    // Material Design Web
    --mdc-theme-primary: var(--rio-global-secondary-bg);
    // --mdc-theme-secondary: var(--rio-global-secondary-bg);
    --mdc-theme-background: var(--rio-global-background-bg);
    --mdc-theme-surface: var(--rio-global-neutral-bg);

    --mdc-theme-on-primary: var(--rio-global-secondary-fg);
    // --mdc-theme-on-secondary: var(--rio-global-secondary-fg);
    --mdc-theme-on-surface: var(--rio-global-background-fg);
}

.rio-switcheroo-neutral {
    // surface := neutral
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-neutral-bg);
    --rio-local-plain-bg-variant: var(--rio-global-neutral-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-neutral-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-heading1-color);
    --rio-local-heading1-background: var(--rio-global-heading1-background);
    --rio-local-heading1-background-clip: var(
        --rio-global-heading1-background-clip
    );
    --rio-local-heading1-fill-color: var(--rio-global-heading1-fill-color);

    --rio-local-heading2-color: var(--rio-global-heading2-color);
    --rio-local-heading2-background: var(--rio-global-heading2-background);
    --rio-local-heading2-background-clip: var(
        --rio-global-heading2-background-clip
    );
    --rio-local-heading2-fill-color: var(--rio-global-heading2-fill-color);

    --rio-local-heading3-color: var(--rio-global-heading3-color);
    --rio-local-heading3-background: var(--rio-global-heading3-background);
    --rio-local-heading3-background-clip: var(
        --rio-global-heading3-background-clip
    );
    --rio-local-heading3-fill-color: var(--rio-global-heading3-fill-color);

    --rio-local-text-color: var(--rio-global-text-color);
    --rio-local-text-background: var(--rio-global-text-background);
    --rio-local-text-background-clip: var(--rio-global-text-background-clip);
    --rio-local-text-fill-color: var(--rio-global-text-fill-color);

    // Material Design Web
    // TODO
}

.rio-switcheroo-primary {
    // surface := primary
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-primary-bg);
    --rio-local-plain-bg-variant: var(--rio-global-primary-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-primary-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-secondary-bg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-secondary-bg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-secondary-bg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-primary-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-secondary {
    // surface := secondary
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-secondary-bg);
    --rio-local-plain-bg-variant: var(--rio-global-secondary-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-secondary-bg-active);

    --rio-local-accent-bg: var(--rio-global-primary-bg);
    --rio-local-accent-fg: var(--rio-global-primary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-secondary-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-secondary-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-secondary-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-secondary-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-success {
    // surface := success
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-success-bg);
    --rio-local-plain-bg-variant: var(--rio-global-success-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-success-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-success-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-success-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-success-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-success-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-warning {
    // surface := warning
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-warning-bg);
    --rio-local-plain-bg-variant: var(--rio-global-warning-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-warning-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-warning-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-warning-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-warning-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-warning-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-danger {
    // surface := danger
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-danger-bg);
    --rio-local-plain-bg-variant: var(--rio-global-danger-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-danger-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-danger-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-danger-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-danger-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-danger-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-disabled {
    // surface := disabled
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-disabled-bg);

    --rio-local-accent-bg: var(--rio-global-disabled-bg);
    --rio-local-accent-fg: var(--rio-global-disabled-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-disabled-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-disabled-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-disabled-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-disabled-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-custom {
    // plain := accent := custom (read from CSS variables)

    // Rio locals
    --rio-local-plain-bg: var(--rio-local-custom-bg);

    --rio-local-accent-bg: var(--rio-local-custom-bg);
    --rio-local-accent-fg: var(--rio-local-custom-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-local-custom-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-local-custom-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-local-custom-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-local-custom-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-accent-to-plain {
    // plain := accent
    //
    // Allows components to access the accent color via the regular plain
    // variables. This can make sense for when components allow changing their
    // color via switcheroos. For example, if a button were to set it's
    // background to the "accent" background, this would show the secondary
    // color, even when applying the "danger" switcheroo.
    //
    // Using this switcheroo buttons can instead use the plain color and get
    // the desired result.

    // Rio locals
    --rio-local-plain-bg: var(--rio-local-accent-bg);
    --rio-local-text-color: var(--rio-local-accent-fg);

    // Material Design Web
    // TODO
}

// "Placeholder element"/"content loading" animation
@keyframes content-loading {
    from {
        background-position: -100rem 0;
    }

    to {
        background-position: 0 0;
    }
}

.rio-content-loading {
    background-image: linear-gradient(
        to right,
        transparent 10%,
        var(--rio-local-accent-bg) 12%,
        transparent 14%
    );
    background-size: 100rem 5rem;
    animation: content-loading 3s linear infinite;
}

// For containers that want to ignore their child's size request. This is useful
// for
// 1. Elements with an aspect ratio, like images and videos
// 2. ScrollContainers
//
// (For things like images and videos, you may need to create a container element
// around the `<img>` or `<video>` element.)
// In both cases, the parent element doesn't care about the size of its child
// element. The child element simply receives all the space that's available,
// and can never force the parent element to grow.
.rio-zero-size-request-container {
    position: relative;
}

.rio-zero-size-request-container > * {
    position: absolute;
    width: 100%;
    height: 100%;
}

// General
a {
    color: var(--rio-local-accent-bg);
}

code {
    font-family: 'Roboto Mono', monospace;
}

// Make sure the whole GUI can scroll. The <html> element can scroll by
// default, so we'll just make sure the <body> uses all the available space.
//
// This is a little simpler than the `ScrollContainer` component, because our
// child element is always the `HighLevelRootComponent` from python, which
// doesn't have a `width` or `height` set.
html {
    background: var(--rio-global-background-bg);
}

body {
    margin: 0;
    padding: 0;

    font-family: Roboto, sans-serif;
}

// Wraps the user's root component
.rio-user-root-scroller {
    overflow: auto;
}

.rio-user-root-scroller > * {
    position: relative !important;
}

// All components
.rio-component {
    position: absolute;
}

// Fundamental Root Component
.rio-fundamental-root-component {
    position: relative !important;

    width: 100vw;
    height: 100vh;
}

// Row & Column
.rio-linear-child-container > * {
    position: relative !important;
}

@keyframes barber-pole {
    from {
        background-position: 0 0;
    }

    to {
        background-position: 3rem 0rem;
    }
}

.rio-undefined-space {
    pointer-events: none;
    flex-grow: 1;

    background-image: linear-gradient(
        -45deg,
        var(--rio-global-warning-bg) 15%,
        transparent 15%,
        transparent 50%,
        var(--rio-global-warning-bg) 50%,
        var(--rio-global-warning-bg) 65%,
        transparent 65%
    );
    background-size: 3rem 3rem;
    animation: barber-pole 1s linear infinite;
}

.rio-row {
    pointer-events: none;
    display: flex;
    align-items: stretch;
}

.rio-row > .rio-linear-child-container {
    display: flex;
    align-items: stretch;
}

.rio-column {
    pointer-events: none;
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.rio-column > .rio-linear-child-container {
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

// Grid
.rio-grid {
    pointer-events: none;
    display: grid;
}

// Text
.rio-text {
    pointer-events: auto;

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    color: var(--rio-local-text-color);
}

// Rectangle
.rio-rectangle {
    pointer-events: auto;
    border-style: solid;

    transition-timing-function: ease; // The transition time is set via JS

    overflow: hidden;

    /*
    The following attributes are controlled via variables, to allow JavaScript
    to change them, even on pseudo-classes.
    */
    background: var(--rectangle-background);
    border-color: var(--rectangle-stroke-color);
    border-width: var(--rectangle-stroke-width);
    border-radius: var(--rectangle-corner-radius-top-left)
        var(--rectangle-corner-radius-top-right)
        var(--rectangle-corner-radius-bottom-right)
        var(--rectangle-corner-radius-bottom-left);
    box-shadow: var(--rectangle-shadow-offset-x)
        var(--rectangle-shadow-offset-y) var(--rectangle-shadow-radius)
        var(--rectangle-shadow-color);
}

.rio-rectangle-ripple {
    overflow: hidden;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-rectangle-hover:hover {
    background: var(--rectangle-background-hover);
    border-color: var(--rectangle-stroke-color-hover);
    border-width: var(--rectangle-stroke-width-hover);
    border-radius: var(--rectangle-corner-radius-top-left-hover)
        var(--rectangle-corner-radius-top-right-hover)
        var(--rectangle-corner-radius-bottom-right-hover)
        var(--rectangle-corner-radius-bottom-left-hover);
    box-shadow: var(--rectangle-shadow-offset-x-hover)
        var(--rectangle-shadow-offset-y-hover)
        var(--rectangle-shadow-radius-hover) var(--rectangle-shadow-color-hover);
}

// Text Input
.rio-text-input {
    cursor: text;
}

// Input Box: This is a style common to multiple input components, such as
// `TextInput` and `Dropdown`.
.rio-input-box {
    pointer-events: auto;

    position: relative;
    min-width: 6rem;

    display: flex;
    flex-direction: row;
    align-items: end;

    background-color: var(--rio-local-plain-bg-variant);

    border-radius: var(--rio-global-corner-radius-small)
        var(--rio-global-corner-radius-small) 0 0;
}

.rio-input-box:not(.rio-disabled-input) {
    // Material Design Ripple
    overflow: hidden;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-input-box:focus-within,
.rio-input-box.rio-input-box-focused {
    outline: none;
    background-color: var(--rio-local-plain-bg-active);
}

.rio-input-box > input {
    order: 1;

    flex-grow: 1;

    background-color: transparent;
    color: var(--rio-local-text-color);
    caret-color: var(--rio-local-accent-bg);
    padding: 0.5rem;
    border: none;
    font-size: 1rem;
}

.rio-input-box > input:active {
    background-color: transparent;
}

.rio-input-box > input:focus-visible {
    outline: none;
}

.rio-input-box-hint-text {
    margin-bottom: 0.5rem;

    color: var(--rio-local-text-color);

    opacity: 0;
    transition: all 0.13s linear;
}

.rio-input-box-prefix-text {
    margin-left: 0.5rem;
}

.rio-input-box-suffix-text {
    margin-right: 0.5rem;
}

input:not(:placeholder-shown) ~ .rio-input-box-hint-text,
.rio-input-box:focus-within > .rio-input-box-hint-text,
.rio-input-box-focused > .rio-input-box-hint-text {
    opacity: 0.5;
}

.rio-input-box-label {
    pointer-events: none;

    position: absolute;
    left: 1.5rem;
    top: calc(50% - 0.5rem);
    font-size: 1rem;
    color: var(--rio-local-text-color);
    opacity: 0.5;

    transition: all 0.13s linear;
}

input:not(:placeholder-shown) ~ .rio-input-box-label,
.rio-input-box:focus-within > .rio-input-box-label,
.rio-input-box-focused > .rio-input-box-label {
    opacity: 1;
    top: 0.5rem;
    bottom: unset;
    font-size: 0.8rem;
}

.rio-input-box:focus-within > .rio-input-box-label,
.rio-input-box-focused > .rio-input-box-label {
    color: var(--rio-local-accent-bg);
}

.rio-input-box-plain-bar,
.rio-input-box-color-bar {
    position: absolute;
    bottom: 0;
    height: 0.12rem;
}

.rio-input-box-plain-bar {
    background-color: var(--rio-local-text-color);

    left: 0;
    right: 0;
    opacity: 0.15;
}

.rio-input-box-color-bar {
    background-color: var(--rio-local-accent-bg);

    left: 40%;
    right: 40%;
    opacity: 0;

    transition: all 0.2s ease-in-out;
}

.rio-input-box:focus-within .rio-input-box-color-bar,
.rio-input-box-focused .rio-input-box-color-bar {
    left: 0;
    right: 0;
    opacity: 1;
}

// Stack
.rio-stack {
    pointer-events: none;
    display: inline-grid;
}

.rio-stack > * {
    grid-column-start: 1;
    grid-row-start: 1;
}

// Switch
.rio-switch .container {
    pointer-events: auto;
    position: relative;
    width: 3.18rem;
    height: 1.54rem;
    margin: auto;
    border-radius: 4.3rem;
    background-color: var(--rio-global-disabled-bg-variant);
    transition: 0.3s ease all;
    z-index: 1;
}

.rio-switch.is-on .container {
    background-color: var(--rio-local-accent-bg);
}

.rio-switch input {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    opacity: 0;
    cursor: pointer;
    z-index: 3;
}

.rio-switch .knob {
    z-index: 2;
    position: absolute;
    top: 0.17rem;
    left: 0.17rem;
    width: 0.86rem;
    height: 0.43rem;
    padding: 0.39em 0.17rem;
    background-color: var(--rio-global-disabled-bg);
    border-radius: 50%;
    transition:
        0.3s ease all,
        left 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15);
}

.rio-switch input:active + .knob {
    width: 1.98rem;
    border-radius: 4.3rem;
}

.rio-switch.is-on input:active + .knob {
    margin-left: -1.12rem;
}

.rio-switch.is-on input + .knob {
    left: 1.8rem;
    background-color: var(--rio-local-plain-bg);
}

// Dropdown
.rio-dropdown {
    pointer-events: auto;
    cursor: pointer;

    position: relative;
}

.rio-dropdown-popup {
    // x, y, width, height, and overflow are set by JavaScript

    position: fixed;
    display: flex;
    align-items: stretch;
    z-index: $z-index-popup;

    background-color: var(--rio-global-background-bg);
    color: var(--rio-global-text-color);
    border-radius: 0 0 var(--rio-global-corner-radius-small)
        var(--rio-global-corner-radius-small);

    box-shadow: 0 0 0.8rem var(--rio-global-shadow-color);
}

.rio-dropdown.rio-input-box > .rio-dropdown-arrow {
    pointer-events: none;

    order: 2;

    margin: 0 0.7rem 0.4rem 0.7rem;
    width: 1.3rem;
    height: 1.3rem;
}

.rio-dropdown-option-highlight {
    font-weight: bold;
    color: var(--rio-local-accent-bg);
}

.rio-dropdown-options {
    flex-grow: 1;

    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    cursor: pointer;
}

.rio-dropdown-options > div {
    position: relative;
    padding: 1rem 1rem;
}

.rio-dropdown-options > svg {
    position: relative;

    width: 4rem;
    height: 4rem;
    padding: rem;
    margin: auto;

    opacity: 0.2;
}

// Spawn a brightly colored element when hovered
.rio-dropdown-option::after {
    content: '';
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    background-color: var(--rio-global-primary-bg);
    opacity: 0;

    transition: opacity 0.1s ease-in-out;
}

.rio-dropdown-option-highlighted::after {
    opacity: 0.2;
}

// .rio-dropdown-options > * + * {
//     border-top: 1px solid var(--rio-global-background-fg);
// }

// Progress Circle
.rio-progress-circle {
    pointer-events: auto;
    stroke: var(--rio-local-plain-bg);

    // Since the svg inside is rotating, the corners of its bounding box will
    // stick out. This can cause frequent re-layouting. To prevent this, we
    // hide the overflow.
    overflow: hidden;
}

.rio-progress-circle circle {
    fill: none;
    stroke-width: 3.5;
    color: var(--rio-local-accent-bg);
}

.spinning svg {
    transform-origin: center;
    animation: rotate 2s linear infinite;
}

.spinning .progress {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
}

.rio-progress-circle:not(.spinning) .progress {
    stroke-dashoffset: -94.25;
    stroke-dasharray: var(--dasharray);
    transition: stroke-dasharray 0.5s ease;
}

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dash {
    0% {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
    }

    50% {
        stroke-dasharray: 90, 200;
        stroke-dashoffset: -35px;
    }

    100% {
        stroke-dashoffset: -125px;
    }
}

// Button
.rio-button {
    pointer-events: auto;

    overflow: hidden; // Needed for the ripple effect

    transition:
        background-color 0.1s ease-in-out,
        color 0.1s ease-in-out,
        border-color 0.1s ease-in-out;
}

.rio-button:not(.rio-switcheroo-disabled) {
    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-buttonstyle-major {
    background: var(--rio-local-plain-bg);
    --rio-local-text-font-weight: bold;

    box-shadow: 0 0 0 transparent;
    transition: box-shadow 0.2s ease-in-out;
}

.rio-buttonstyle-major:hover:not(.rio-switcheroo-disabled) {
    background: var(--rio-local-plain-bg);
    cursor: pointer;

    box-shadow: 0 0.1rem 0.22rem rgba(0, 0, 0, 0.35);
}

.rio-buttonstyle-minor:not(:hover) {
    outline: 0.1em solid var(--rio-local-plain-bg);
    --rio-local-text-color: var(--rio-local-plain-bg);
}

.rio-buttonstyle-minor:hover:not(.rio-switcheroo-disabled) {
    background: var(--rio-local-plain-bg);
    cursor: pointer;
}

.rio-buttonstyle-plain:hover:not(.rio-switcheroo-disabled) {
    cursor: pointer;
}

// Shapes
.rio-shape-pill {
    border-radius: $infinite-corner-radius;
}

.rio-shape-rounded {
    border-radius: var(--rio-global-corner-radius-small);
}

.rio-shape-rectangle {
    border-radius: 0; // Not necessary, just for consistency
}

.rio-shape-circle {
    border-radius: 50%;
}

// Revealer
.rio-revealer {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: stretch;
}

.rio-revealer-header {
    pointer-events: auto;
    cursor: pointer;

    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0 0.5rem;

    color: var(--rio-local-text-color);
}

.rio-revealer-label {
    flex-grow: 1;
}

.rio-revealer-arrow {
    width: 1.3rem;
    height: 1.3rem;

    fill: var(--rio-local-text-color);
    opacity: 0.7;

    transform: rotate(90deg);

    transition: transform 0.25s ease-in-out;
}

.rio-revealer-open .rio-revealer-arrow {
    transform: rotate(0deg);
}

.rio-revealer-content-outer {
    flex-grow: 1;
    position: relative; // Needed for the overflow: hidden, not layouting
    overflow: hidden;
}

.rio-revealer-content-inner {
    position: absolute;
    bottom: 0;

    opacity: 0;
    transform: translateY(-50%);

    transition:
        opacity 0.45s ease-in-out,
        transform 0.35s ease;
}

.rio-revealer-open .rio-revealer-content-inner {
    opacity: 1;
    transform: translateY(0%);
}

.rio-revealer-content-inner > * {
    position: relative !important;
}

// Icon
.rio-icon {
    pointer-events: auto;
}

// Slideshow
.rio-slideshow {
    pointer-events: auto;
    position: relative;
    overflow: hidden;
}

.slideshow-child-container {
    position: relative;
    display: grid;
    width: 100%;
    height: 100%;
}

.slideshow-child-container > div {
    grid-column-start: 1;
    grid-row-start: 1;
    width: 100%;
    height: 100%;
}

.slideshow-child-container > div > * {
    grid-column-start: 1;
    grid-row-start: 1;
    width: 100%;
    height: 100%;
}

.slideshow-progress {
    position: absolute;
    bottom: 0;

    width: 100%;
    height: 0.3rem;
    background-color: var(--rio-local-accent-bg);
}

// Overlay
.rio-overlay {
    pointer-events: none;
    position: fixed !important;

    top: 0 !important;
    left: 0 !important;
    width: unset !important;
    height: unset !important;

    z-index: $z-index-overlay;
}

// Spacer
.rio-spacer {
    pointer-events: none;
}

// MediaPlayer
.rio-media-player {
    pointer-events: auto;
    width: 100%;
    height: 100%;
    position: relative;
}

.rio-media-player video {
    pointer-events: none;
    width: 100%;
    height: 100%;
    object-fit: contain;
}

.rio-media-player-alt-display {
    pointer-events: none;

    position: absolute;
    left: 50%;
    top: 50%;

    width: 50%;
    height: 50%;
    max-width: 20rem;
    max-height: 20rem;
    aspect-ratio: 1;

    opacity: 0.5;

    transform: translate(-50%, -50%);
}

.rio-media-player-controls {
    position: absolute;
    left: 0;
    bottom: 0;
    right: 0;

    background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.6));
    padding-top: 2.5rem;

    display: flex;
    flex-direction: column;
    gap: 0rem;
    align-items: stretch;

    transition: opacity 0.4s ease-in-out;
}

.rio-media-player-timeline {
    pointer-events: auto;
    cursor: pointer;

    position: relative;
    height: 2rem;
    margin: 0 0.5rem;
}

.rio-media-player-timeline > div {
    pointer-events: none;

    position: relative;
    top: 50%;
    height: 0.2rem;
    transform: translateY(-50%);

    transition: height 0.2s ease-in-out;
}

.rio-media-player-timeline:hover > div {
    height: 0.4rem;
}

.rio-media-player-timeline-knob {
    position: absolute;
    width: 0rem;
    height: 0rem;
    left: 100%;
    top: 50%;
    background-color: var(--rio-global-primary-bg);
    border-radius: 50%;
    transform: translate(-50%, -50%);

    transition:
        width 0.2s ease-in-out,
        height 0.2s ease-in-out;
}

.rio-media-player-timeline:hover .rio-media-player-timeline-knob {
    width: 0.9rem;
    height: 0.9rem;
}

.rio-media-player-timeline-background,
.rio-media-player-timeline-loaded,
.rio-media-player-timeline-hover,
.rio-media-player-timeline-played {
    position: absolute;
    width: 0%;
    height: 100%;
    background-color: white;
    border-radius: $infinite-corner-radius;
}

.rio-media-player-timeline-background {
    width: 100%;
    opacity: 0.2;
}

.rio-media-player-timeline-loaded {
    opacity: 0.3;
}

.rio-media-player-timeline-hover {
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
}

.rio-media-player-timeline-played {
    background-color: var(--rio-global-primary-bg);
}

.rio-media-player-controls-row {
    display: flex;
    gap: 1.2rem;
    align-items: center;
    padding: 0.5rem;
    padding-top: 0;
}

.rio-media-player-button {
    pointer-events: auto;
    cursor: pointer;

    width: 2rem;
    height: 2rem;
}

.rio-media-player-button > img {
    width: 100%;
    height: 100%;
}

.rio-media-player-volume {
    pointer-events: auto;
    cursor: pointer;

    position: relative;
    width: 5rem;
    height: 1.5rem;
}

.rio-media-player-volume > div {
    pointer-events: none;

    position: relative;
    top: 50%;
    height: 0.2rem;
    transform: translateY(-50%);
}

.rio-media-player-volume-background,
.rio-media-player-volume-current {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: $infinite-corner-radius;
    background-color: white;
}

.rio-media-player-volume-background {
    opacity: 0.2;
}

.rio-media-player-volume-knob {
    position: absolute;
    width: 0.9rem;
    height: 0.9rem;
    left: 100%;
    top: 50%;
    background-color: white;
    border-radius: 50%;
    transform: translate(-50%, -50%);
}

.rio-media-player-volume > div {
    position: relative;
    top: 50%;
    height: 0.2rem;
    transform: translateY(-50%);
}

.rio-media-player-playtime-label {
    color: white;
    opacity: 0.6;
}

// Markdown
.rio-markdown-view {
    pointer-events: auto;
    --rio-padding: calc(0.5rem + var(--rio-global-corner-radius-small));
}

.rio-markdown-view {
    color: var(--rio-local-text-color);

    ul {
        margin: 0;
        padding-left: 1em;
        list-style-type: none;
    }

    ul > li {
        margin-bottom: 0.4em;
    }

    ul > li:before {
        content: '- ';
        font-weight: bold;
    }

    p {
        code {
            font-family: 'Roboto Mono', monospace;
            background: var(--rio-local-plain-bg-variant);
            border-radius: var(--rio-global-corner-radius-small);
            padding: 0.1em 0.3em;
        }
    }
}

.rio-markdown-code-block {
    background: var(--rio-local-plain-bg-variant);
    border-radius: var(--rio-global-corner-radius-small);
}

.rio-markdown-code-block-header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    color: var(--rio-local-text-color);
}

.rio-markdown-code-block-header > * {
    padding: var(--rio-padding);
}

.rio-markdown-code-block-language {
    font-family: Roboto, sans-serif;
    font-size: 0.8rem;
    font-weight: bold;
    opacity: 0.4;
}

.rio-markdown-code-block-copy-button {
    min-width: 6rem;
    min-height: 2.3rem;
    cursor: pointer;
    font-family: Roboto, sans-serif;
    font-size: 0.8rem;
    border: none;
    background: none;
    border-radius: var(--rio-global-corner-radius-small);
    margin: 0;
    color: var(--rio-local-text-color);
    font-weight: bold;
    opacity: 0.4;

    transition:
        color 0.2s ease-in-out,
        opacity 0.2s ease-in-out;
}

.rio-markdown-code-block-copy-button:hover {
    color: var(--rio-local-accent-bg);
    opacity: 1;
}

.rio-markdown-code-block > code {
    font-size: 1rem;
    display: block;
    padding: 0 var(--rio-padding) var(--rio-padding) var(--rio-padding);
}

.rio-markdown-view {
    h1 {
        font-family: var(--rio-global-heading1-font-name);
        color: var(--rio-local-heading1-color);
        font-size: var(--rio-global-heading1-font-size);
        font-style: var(--rio-global-heading1-italic);
        font-weight: var(--rio-global-heading1-font-weight);
        text-decoration: var(--rio-global-heading1-underlined);
        text-transform: var(--rio-global-heading1-all-caps);

        margin-top: 0;

        :not(:first-child) {
            margin-top: 2em;
        }
    }

    h2 {
        font-family: var(--rio-global-heading2-font-name);
        color: var(--rio-local-heading2-color);
        font-size: var(--rio-global-heading2-font-size);
        font-style: var(--rio-global-heading2-italic);
        font-weight: var(--rio-global-heading2-font-weight);
        text-decoration: var(--rio-global-heading2-underlined);
        text-transform: var(--rio-global-heading2-all-caps);

        margin-top: 0;

        :not(:first-child) {
            margin-top: 1.5em;
        }
    }

    h3 {
        font-family: var(--rio-global-heading3-font-name);
        color: var(--rio-local-heading3-color);
        font-size: var(--rio-global-heading3-font-size);
        font-style: var(--rio-global-heading3-italic);
        font-weight: var(--rio-global-heading3-font-weight);
        text-decoration: var(--rio-global-heading3-underlined);
        text-transform: var(--rio-global-heading3-all-caps);

        margin-top: 0;

        :not(:first-child) {
            margin-top: 1em;
        }
    }

    p {
        font-family: var(--rio-global-text-font-name);
        color: var(--rio-local-text-color);
        font-size: var(--rio-global-text-font-size);
        font-style: var(--rio-global-text-italic);
        font-weight: var(--rio-global-text-font-weight);
        text-decoration: var(--rio-global-text-underlined);
        text-transform: var(--rio-global-text-all-caps);
    }
}

// Link
.rio-link {
    pointer-events: auto;
}

.rio-text-link {
    color: var(--rio-local-accent-bg);
    cursor: pointer;
}

// Slider
.rio-slider {
    pointer-events: auto;
}

// ScrollContainer
.rio-scroll-container {
    // Needs pointer events so that the scrollbar can be interacted with
    pointer-events: auto;
}

.rio-scroll-container > * > * {
    min-width: 100%;
    min-height: 100%;
}

// Color Picker
.rio-color-picker {
    pointer-events: none;

    min-width: 10rem;
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.rio-color-picker-color-square {
    pointer-events: auto;

    position: relative;
    min-height: 6rem;
    cursor: crosshair;
    margin-bottom: 0.7rem;
    border-radius: 0.45rem;
    flex-grow: 1;
}

.rio-color-picker-slider-outer {
    pointer-events: auto;

    position: relative;
    padding: 0.7rem 0;
}

.rio-color-slider-inner {
    height: 0.9rem;
    cursor: crosshair;
    border-radius: 99rem;
}

.rio-color-picker-knob {
    width: 1.4rem;
    height: 1.4rem;
    border-radius: 50%;
    border: 0.2rem solid white;
    position: absolute;
    transform: translate(-50%, -50%);
    box-sizing: border-box;
    background: var(--chosen-color-opaque);

    /* Allow clicking through the knob */
    pointer-events: none;
    cursor: crosshair;
}

.rio-color-picker-slider-outer > .rio-color-picker-knob {
    top: 50%;
}

.color-slider-checkers {
    border-radius: 99rem;
}

.rio-color-picker-hue-bar > .rio-color-slider-inner {
    background: linear-gradient(
        to right,
        red,
        yellow,
        lime,
        aqua,
        blue,
        magenta,
        red
    );
}

.rio-color-picker-opacity-bar > .rio-color-slider-inner:not(.rio-checkered) {
    position: absolute;
    top: 0.7rem;
    left: 0;
    right: 0;
    bottom: 0.7rem;

    background: linear-gradient(
        to right,
        transparent,
        var(--chosen-color-opaque)
    );
}

.rio-color-picker-result-container {
    margin-top: 0.5rem;
    margin-left: auto;
    margin-right: auto;

    display: flex;
    align-items: center;
    gap: 0.8rem;
}

.rio-color-picker-selected-color-circle {
    position: relative;
    width: 2.5rem;
    height: 2.5rem;
}

.rio-color-picker-selected-color-circle > * {
    width: 100%;
    height: 100%;
    border-radius: 50%;
}

.rio-color-picker-selected-color-circle > div:first-child {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    background: var(--chosen-color-transparent);
}

.rio-color-picker-selected-color-circle-color {
    background: var(--chosen-color-transparent);
}

.rio-color-picker-selected-color-label {
    pointer-events: auto;
    opacity: 0.25;

    /* Fixed width to avoid movement when the value changes */
    width: 5rem;

    /* Text style */
    font-family: Roboto;
    font-size: 0.9rem;
    text-align: center;
    font-weight: bold;

    /* Override the default styling */
    background: transparent;
    border: none;
    padding: 0.3rem;
    border-radius: 0.5rem;

    transition:
        opacity 0.1s ease-in-out,
        color 0.1s ease-in-out,
        background-color 0.1s ease-in-out;
}

.rio-color-picker-selected-color-label:focus {
    outline: none;

    opacity: 1;
    color: var(--rio-local-accent-bg);
    background: var(--rio-local-plain-bg-variant);
}

.rio-checkered {
    --checker-color: #888;
    --checker-size: 0.9rem;

    background-image: linear-gradient(
            45deg,
            var(--checker-color) 25%,
            transparent 25%
        ),
        linear-gradient(45deg, transparent 75%, var(--checker-color) 75%),
        linear-gradient(45deg, transparent 75%, var(--checker-color) 75%),
        linear-gradient(45deg, var(--checker-color) 25%, transparent 25%);

    background-size: var(--checker-size) var(--checker-size);
    background-position:
        0 0,
        0 0,
        calc(var(--checker-size) * -0.5) calc(var(--checker-size) * -0.5),
        calc(var(--checker-size) * 0.5) calc(var(--checker-size) * 0.5);
}

// Drawer
.rio-drawer {
    pointer-events: auto;
    position: relative;
    overflow: hidden;

    display: flex;
    align-items: stretch;
}

.rio-drawer-shade {
    pointer-events: none;

    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;

    transition: background-color 0.5s ease-in-out;
}

.rio-drawer-anchor {
    pointer-events: none;

    flex-grow: 1;
}

.rio-drawer-content {
    pointer-events: none;

    position: absolute;
    background-color: var(--rio-global-neutral-bg);

    box-shadow: 0 0 1rem var(--rio-global-shadow-color);

    transition: transform 0.5s ease-out;
}

.rio-drawer-left,
.rio-drawer-right {
    min-height: 8rem;
}

.rio-drawer-top,
.rio-drawer-bottom {
    min-width: 8rem;
}

.rio-drawer-left > .rio-drawer-content {
    top: 0;
    left: 0;
    bottom: 0;
    width: fit-content;

    border-radius: 0 var(--rio-global-corner-radius-large)
        var(--rio-global-corner-radius-large) 0;
}

.rio-drawer-right > .rio-drawer-content {
    top: 0;
    right: 0;
    bottom: 0;
    width: fit-content;

    border-radius: var(--rio-global-corner-radius-large) 0 0
        var(--rio-global-corner-radius-large);
}

.rio-drawer-top > .rio-drawer-content {
    left: 0;
    top: 0;
    right: 0;
    height: fit-content;

    border-radius: 0 0 var(--rio-global-corner-radius-large)
        var(--rio-global-corner-radius-large);
}

.rio-drawer-bottom > .rio-drawer-content {
    left: 0;
    bottom: 0;
    right: 0;
    height: fit-content;

    border-radius: var(--rio-global-corner-radius-large)
        var(--rio-global-corner-radius-large) 0 0;
}

.rio-drawer-no-transition {
    transition: none !important;
}

.rio-drawer-no-transition > * {
    transition: none !important;
}

// Popup
.rio-popup {
    z-index: $z-index-popup;
}

.rio-popup-content {
    position: fixed;

    width: min-content;
    height: min-content;

    background-color: var(--rio-local-plain-bg);
    border-radius: var(--rio-global-corner-radius-medium);
    box-shadow: 0 0 1rem var(--rio-global-shadow-color);

    transform: scale(0);
    opacity: 0;

    transition:
        transform 0.2s linear,
        opacity 0.1s ease-in-out;
}

.rio-popup-open > .rio-popup-content {
    transform: scale(1);
    opacity: 1;

    transition:
        transform 0.2s $transition-timing-overshoot,
        opacity 0.1s ease-in-out;
}

// Image
.rio-image > * {
    display: flex;
    align-items: center;
    justify-content: center;

    max-width: 100%;
    max-height: 100%;
}

// Card
.rio-card {
    pointer-events: auto;
    background-color: var(--rio-local-plain-bg);
    box-shadow: 0 0 0 var(--rio-global-shadow-color);

    transition:
        box-shadow 0.15s ease-out,
        background-color 0.15s ease-out;
}

.rio-card-elevate-on-hover:hover {
    box-shadow: 0 0.15rem 0.3rem var(--rio-global-shadow-color);
}

.rio-card-colorize-on-hover:hover {
    background-color: var(--rio-local-plain-bg-active);
}

// SwitcherBar
.rio-switcher-bar {
    pointer-events: auto;
    display: flex;
    align-items: stretch;
    justify-content: space-around;
}

.rio-switcher-bar-option-outer {
    position: relative;
}

.rio-switcher-bar-option-inner {
    display: flex;
    flex-direction: column;
    align-items: end;
    justify-content: end;
    cursor: pointer;

    padding: 0.7rem 1.5rem;

    overflow: hidden;
    border-radius: var(--rio-global-corner-radius-large);

    font-weight: bold;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-switcher-bar-option-inner > svg {
    width: 2rem;
    height: 2rem;

    margin-left: auto;
    margin-right: auto;

    margin-bottom: 0.5rem;
}

.rio-switcher-bar-option-inner > div {
    margin-left: auto;
    margin-right: auto;
}

.rio-switcher-bar-marker {
    pointer-events: none;
    background: var(--rio-local-plain-bg);
    opacity: 0.3;

    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;

    border-radius: var(--rio-global-corner-radius-large);

    transition:
        left 0.4s $transition-timing-overshoot,
        top 0.4s $transition-timing-overshoot,
        right 0.4s $transition-timing-overshoot,
        bottom 0.4s $transition-timing-overshoot;
}

// Table
.rio-table {
    pointer-events: auto;

    color: var(--rio-local-text-color);
    border-collapse: collapse;

    // borders
    border-spacing: 0;

    th,
    tr,
    td {
        border: none;
    }
    tbody > tr {
        border-top: 1px solid var(--rio-local-plain-bg-variant);
    }

    // header row
    th {
        font-weight: bold;
        cursor: pointer;

        transition: color 0.06s ease-out;
    }

    th:hover {
        color: var(--rio-local-accent-bg);
    }

    th,
    td {
        padding: 0.5rem 0.8rem;
    }

    th::after {
        content: '▴';
        display: inline-block;
        margin-left: 0.3rem;
        opacity: 0;
    }
    th[data-sort='asc']::after {
        content: '▴';
        margin-left: 0.3rem;
        opacity: 1;
    }
    th[data-sort='desc']::after {
        content: '▾';
        margin-left: 0.3rem;
        opacity: 1;
    }

    // Highlight the row when hovered
    tr {
        transition: background-color 0.06s ease-out;
    }

    tbody > tr:hover {
        background-color: var(--rio-local-plain-bg-active);
    }
}

// Lists (ListView + various list items)
.rio-list-view {
    pointer-events: none;

    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.rio-heading-list-item {
    pointer-events: none;

    padding: 1.5rem 1.5rem 0.7rem 1rem;
}

.rio-custom-list-item {
    pointer-events: auto;

    padding: 0.7rem 1.5rem;
    background-color: var(--rio-local-plain-bg-variant);

    transition: background-color 0.1s ease-out;
}

.rio-custom-list-item:hover {
    background-color: var(--rio-local-plain-bg-active);
}

// Not actually a separate component, only used by ListViews at the moment
.rio-separator {
    width: 100%;
    height: 1px;
    background-color: var(--rio-local-text-color);
    opacity: 0.2;
}

// Flow
.rio-flow {
    display: flex;
    flex-wrap: wrap;
}

// Restyle the material progressbar to take up the entire assigned height
.mdc-linear-progress__bar-inner {
    height: 100%;
    background-color: var(--mdc-theme-primary);
}

// Connection lost popup
.rio-connection-lost-popup {
    pointer-events: none;

    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    z-index: $z-index-error-popup;

    background-color: transparent;

    transition: background-color 1s ease-in-out;
}

.rio-connection-lost-popup.rio-connection-lost-popup-visible {
    display: flex;
    align-items: stretch;
    background-color: rgba(0, 0, 0, 0.5);
}

.rio-connection-lost-popup > * {
    position: absolute;
    flex-grow: 1;

    left: 0;
    top: 0;
    width: 100%;
    height: 100%;

    opacity: 0;
    transform: translateY(-5rem);

    transition:
        opacity 0.3s ease-in-out,
        transform 0.3s $transition-timing-overshoot;
}

.rio-connection-lost-popup.rio-connection-lost-popup-visible > * {
    opacity: 1;
    transform: translateY(0);
}

// Traceback Popup
.rio-traceback {
    pointer-events: auto;

    position: relative;
    left: 50%;
    top: 5rem;
    width: 40rem;
    padding: 1.5rem;

    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: 1.5rem;

    border-radius: var(--rio-global-corner-radius-medium);

    box-shadow: 0 0.4rem 1rem var(--rio-global-shadow-color);

    transform: translateX(-50%);
}

.rio-traceback-header {
    display: flex;
    align-items: center;
    gap: 0.7rem;
}

.rio-traceback-header > svg {
    width: 2.5rem;
    height: 2.5rem;
    fill: var(--rio-global-danger-bg);
}

.rio-traceback-header > div {
    flex-grow: 1;
    text-align: left;

    font-size: 1.8rem;
    color: var(--rio-global-danger-bg);
}

.rio-traceback-traceback {
    font-family: 'Roboto Mono', monospace;
    font-size: 0.9rem;
    white-space: pre-wrap;
    overflow-wrap: break-word;
    padding: 0.5rem 1rem;
    background-color: var(--rio-local-plain-bg-variant);
    border-radius: var(--rio-global-corner-radius-small);
}

.rio-traceback-footer {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
}

.rio-traceback-footer-links {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    justify-content: space-between;
}

.rio-traceback-footer > a {
    flex: 1;
}

.rio-traceback-bold {
    font-weight: bold;
}

.rio-traceback-dim {
    opacity: 0.5;
}

.rio-traceback-red {
    color: var(--rio-global-danger-bg);
}

.rio-traceback-yellow {
    color: var(--rio-global-warning-bg);
}

// Debugger
.rio-debugger {
    z-index: $z-index-debugger;
}

.rio-debugger-navigation-rio-logo {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.3rem;
    z-index: 2;

    padding: 3rem 0 1rem 0;

    text-decoration: none;

    img {
        width: 2.5rem;
        height: 2.5rem;
        object-fit: contain;
    }

    div {
        font-weight: bold;
        color: var(--rio-local-text-color);

        transition: color 1s ease-in-out;
    }

    &:hover div {
        color: var(--rio-global-secondary-fg);

        transition: color 0.1s ease-in-out;
    }
}

.rio-debugger-navigation-rio-logo::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: -1;

    background: linear-gradient(
        to top,
        var(--rio-global-secondary-bg),
        transparent
    );

    opacity: 0;
    transition: opacity 1s ease-out;
}

.rio-debugger-navigation-rio-logo:hover::before {
    opacity: 1;
    transition: opacity 0.1s ease-out;
}

.rio-debugger-tree-view {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: stretch;
    gap: 0.5rem;

    min-width: 20rem;
    padding: 1rem;
}

.rio-debugger-header {
    margin-bottom: 1rem;

    background: var(--rio-local-plain-bg-variant);
}

.rio-debugger-tree-component-tree {
    flex-grow: 1;
    position: relative;
}

.rio-debugger-tree-component-tree > * {
    position: absolute;
    width: 100%;
    height: 100%;

    overflow-x: hidden;
    overflow-y: auto;
}

.rio-debugger-tree-component-details {
    display: grid;
    grid-template-columns: auto auto auto auto;
    row-gap: 0.5rem;
    column-gap: 0.5rem;
}

.rio-debugger-tree-component-details-heading {
    display: flex;
    align-items: end;
    justify-content: stretch;
}

.rio-debugger-tree-component-details-key-container {
    display: flex;
    gap: 0.5rem;
}

.rio-debugger-tree-component-details-key-container > *:first-child {
    width: 1.2rem;
    height: 1.2rem;
}

.rio-debugger-tree-component-docs-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-top: 1rem;

    color: var(--rio-local-accent-bg);

    div {
        width: 1.2rem;
        height: 1.2rem;
    }
}

.rio-debugger-component-tree-item {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
}

// Add this CSS to your stylesheet

@keyframes flash-text {
    0% {
        color: initial;
    }
    20% {
        color: var(--rio-global-warning-bg);
    }
    100% {
        color: initial;
    }
}

.rio-debugger-component-tree-flash {
    animation: flash-text 3s linear;
}

.rio-debugger-component-tree-item-header {
    pointer-events: auto;
    cursor: pointer;
    z-index: 1;

    position: relative;
    padding: 0.3rem 0.6rem;

    display: flex;
    flex-direction: row;
    gap: 0.5rem;
}

.rio-debugger-component-tree-item-header::after {
    pointer-events: none;
    content: '';
    display: block;

    z-index: -1;

    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;

    background: var(--rio-global-secondary-bg);
    border-radius: $infinite-corner-radius;

    opacity: 0;

    transition: opacity 0.1s ease-in-out;
}

.rio-debugger-component-tree-item-header > div > svg {
    width: 1rem;
    height: 1rem;
}

.rio-debugger-component-tree-item-header-weakly-selected {
    font-weight: bold;
}

.rio-debugger-component-tree-item-header-strongly-selected {
    font-weight: bold;
    color: var(--rio-global-secondary-fg);
}

.rio-debugger-component-tree-item-header:hover::after {
    opacity: 0.4;
}

.rio-debugger-component-tree-item-header-weakly-selected::after {
    opacity: 0.2;
}

.rio-debugger-component-tree-item-header-strongly-selected::after {
    opacity: 0.6;
}

.rio-debugger-component-tree-item-header-strongly-selected:hover::after {
    opacity: 0.8;
}

.rio-debugger-component-tree-item-children {
    display: flex;
    flex-direction: column;
    gap: 0.2rem;
}

.rio-debugger-component-highlighter {
    pointer-events: none;
    position: fixed;
    z-index: $z-index-debugger-highlighter;
}

@keyframes pulse {
    0% {
        left: -0.3rem;
        top: -0.3rem;
        right: -0.3rem;
        bottom: -0.3rem;
        border-width: 0.5rem;
    }
    50% {
        left: -0.7rem;
        top: -0.7rem;
        right: -0.7rem;
        bottom: -0.7rem;
        border-width: 0.4rem;
    }
    100% {
        left: -0.3rem;
        top: -0.3rem;
        right: -0.3rem;
        bottom: -0.3rem;
        border-width: 0.5rem;
    }
}

.rio-debugger-component-highlighter::after {
    content: '';
    position: absolute;
    display: block;

    border-radius: 1rem;
    box-shadow: 0 0 0 9999rem rgba(0, 0, 0, 0.6);

    border-style: solid;
    border-color: var(--rio-global-secondary-bg);

    animation: pulse 1.4s infinite;
}

.rio-debugger-background {
    z-index: -1;
    position: relative;

    background: var(--rio-local-plain-bg);
}

.rio-debugger-background::after {
    content: '';
    position: absolute;
    display: block;
    z-index: -1;

    left: 0;
    top: 0;
    bottom: 0;
    right: 0;

    background-image: linear-gradient(
        -45deg,
        var(--rio-local-plain-bg) 25%,
        var(--rio-global-secondary-bg) 25%,
        var(--rio-global-secondary-bg) 50%,
        var(--rio-local-plain-bg) 50%,
        var(--rio-local-plain-bg) 75%,
        var(--rio-global-secondary-bg) 75%,
        var(--rio-global-secondary-bg)
    );
    background-size: 3rem 3rem;
    animation: barber-pole 10s linear infinite;

    opacity: 0.04;
}
