@use '@material/circular-progress';
@use '@material/floating-label/mdc-floating-label';
@use '@material/line-ripple/mdc-line-ripple';
@use '@material/linear-progress';
@use '@material/notched-outline/mdc-notched-outline';
@use '@material/ripple';
@use '@material/slider/styles' as sliderStyles;
@use '@material/switch/styles' as switchStyles;
@use 'sass:meta';

@use 'fonts.scss';

@include linear-progress.core-styles;

// Light / Dark highlight.js themes
//
// Switch between these by setting the `data-theme` attribute on the `html`
html[data-theme='light'] {
    @include meta.load-css('highlightjs-default-light.css');
}

html[data-theme='dark'] {
    @include meta.load-css('highlightjs-default-dark.css');
}

// Not visible here:
//
// JavaScript sets global theming variables, of the form `--rio-global-...`.

// Z-indices for components which are expected to show up on top
$z-index-overlay: 10000;
$z-index-popup: 10001;
$z-index-error-popup: 10002;

// "Infinite" corner radius, for creating pill shapes
$infinite-corner-radius: 99999px;

// Nonstandard transition timing function
$transition-timing-overshoot: cubic-bezier(0.5, 0.5, 0.2, 1.14);

// Theme Switcheroos
.rio-switcheroo-background {
    // surface := primary
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-background-bg);
    --rio-local-plain-bg-variant: var(--rio-global-background-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-background-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-heading1-color);
    --rio-local-heading1-background: var(--rio-global-heading1-background);
    --rio-local-heading1-background-clip: var(
        --rio-global-heading1-background-clip
    );
    --rio-local-heading1-fill-color: var(--rio-global-heading1-fill-color);

    --rio-local-heading2-color: var(--rio-global-heading2-color);
    --rio-local-heading2-background: var(--rio-global-heading2-background);
    --rio-local-heading2-background-clip: var(
        --rio-global-heading2-background-clip
    );
    --rio-local-heading2-fill-color: var(--rio-global-heading2-fill-color);

    --rio-local-heading3-color: var(--rio-global-heading3-color);
    --rio-local-heading3-background: var(--rio-global-heading3-background);
    --rio-local-heading3-background-clip: var(
        --rio-global-heading3-background-clip
    );
    --rio-local-heading3-fill-color: var(--rio-global-heading3-fill-color);

    --rio-local-text-color: var(--rio-global-text-color);
    --rio-local-text-background: var(--rio-global-text-background);
    --rio-local-text-background-clip: var(--rio-global-text-background-clip);
    --rio-local-text-fill-color: var(--rio-global-text-fill-color);

    // Material Design Web
    --mdc-theme-primary: var(--rio-global-secondary-bg);
    // --mdc-theme-secondary: var(--rio-global-secondary-bg);
    --mdc-theme-background: var(--rio-global-background-bg);
    --mdc-theme-surface: var(--rio-global-neutral-bg);

    --mdc-theme-on-primary: var(--rio-global-secondary-fg);
    // --mdc-theme-on-secondary: var(--rio-global-secondary-fg);
    --mdc-theme-on-surface: var(--rio-global-background-fg);
}

.rio-switcheroo-neutral {
    // surface := neutral
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-neutral-bg);
    --rio-local-plain-bg-variant: var(--rio-global-neutral-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-neutral-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-heading1-color);
    --rio-local-heading1-background: var(--rio-global-heading1-background);
    --rio-local-heading1-background-clip: var(
        --rio-global-heading1-background-clip
    );
    --rio-local-heading1-fill-color: var(--rio-global-heading1-fill-color);

    --rio-local-heading2-color: var(--rio-global-heading2-color);
    --rio-local-heading2-background: var(--rio-global-heading2-background);
    --rio-local-heading2-background-clip: var(
        --rio-global-heading2-background-clip
    );
    --rio-local-heading2-fill-color: var(--rio-global-heading2-fill-color);

    --rio-local-heading3-color: var(--rio-global-heading3-color);
    --rio-local-heading3-background: var(--rio-global-heading3-background);
    --rio-local-heading3-background-clip: var(
        --rio-global-heading3-background-clip
    );
    --rio-local-heading3-fill-color: var(--rio-global-heading3-fill-color);

    --rio-local-text-color: var(--rio-global-text-color);
    --rio-local-text-background: var(--rio-global-text-background);
    --rio-local-text-background-clip: var(--rio-global-text-background-clip);
    --rio-local-text-fill-color: var(--rio-global-text-fill-color);

    // Material Design Web
    // TODO
}

.rio-switcheroo-primary {
    // surface := primary
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-primary-bg);
    --rio-local-plain-bg-variant: var(--rio-global-primary-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-primary-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-primary-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-primary-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-primary-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-primary-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-secondary {
    // surface := secondary
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-secondary-bg);
    --rio-local-plain-bg-variant: var(--rio-global-secondary-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-secondary-bg-active);

    --rio-local-accent-bg: var(--rio-global-primary-bg);
    --rio-local-accent-fg: var(--rio-global-primary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-secondary-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-secondary-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-secondary-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-secondary-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-success {
    // surface := success
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-success-bg);
    --rio-local-plain-bg-variant: var(--rio-global-success-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-success-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-success-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-success-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-success-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-success-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-warning {
    // surface := warning
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-warning-bg);
    --rio-local-plain-bg-variant: var(--rio-global-warning-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-warning-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-warning-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-warning-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-warning-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-warning-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-danger {
    // surface := danger
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-danger-bg);
    --rio-local-plain-bg-variant: var(--rio-global-danger-bg-variant);
    --rio-local-plain-bg-active: var(--rio-global-danger-bg-active);

    --rio-local-accent-bg: var(--rio-global-secondary-bg);
    --rio-local-accent-fg: var(--rio-global-secondary-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-danger-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-danger-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-danger-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-danger-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-disabled {
    // surface := disabled
    //
    // -> All others follow.

    // Rio locals
    --rio-local-plain-bg: var(--rio-global-disabled-bg);

    --rio-local-accent-bg: var(--rio-global-disabled-bg);
    --rio-local-accent-fg: var(--rio-global-disabled-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-global-disabled-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-global-disabled-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-global-disabled-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-global-disabled-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-custom {
    // plain := accent := custom (read from CSS variables)

    // Rio locals
    --rio-local-plain-bg: var(--rio-local-custom-bg);

    --rio-local-accent-bg: var(--rio-local-custom-bg);
    --rio-local-accent-fg: var(--rio-local-custom-fg);

    // Text Styles
    --rio-local-heading1-color: var(--rio-local-custom-fg);
    --rio-local-heading1-background: 'none';
    --rio-local-heading1-background-clip: 'border-box';
    --rio-local-heading1-fill-color: 'transparent';

    --rio-local-heading2-color: var(--rio-local-custom-fg);
    --rio-local-heading2-background: 'none';
    --rio-local-heading2-background-clip: 'border-box';
    --rio-local-heading2-fill-color: 'transparent';

    --rio-local-heading3-color: var(--rio-local-custom-fg);
    --rio-local-heading3-background: 'none';
    --rio-local-heading3-background-clip: 'border-box';
    --rio-local-heading3-fill-color: 'transparent';

    --rio-local-text-color: var(--rio-local-custom-fg);
    --rio-local-text-background: 'none';
    --rio-local-text-background-clip: 'border-box';
    --rio-local-text-fill-color: 'transparent';

    // Material Design Web
    // TODO
}

.rio-switcheroo-accent-to-plain {
    // plain := accent
    //
    // Allows components to access the accent color via the regular plain
    // variables. This can make sense for when components allow changing their
    // color via switcheroos. For example, if a button were to set it's
    // background to the "accent" background, this would show the secondary
    // color, even when applying the "danger" switcheroo.
    //
    // Using this switcheroo buttons can instead use the plain color and get
    // the desired result.

    // Rio locals
    --rio-local-plain-bg: var(--rio-local-accent-bg);
    --rio-local-text-color: var(--rio-local-accent-fg);

    // Material Design Web
    // TODO
}

// "Placeholder element"/"content loading" animation
@keyframes content-loading {
    from {
        background-position: -100rem 0;
    }

    to {
        background-position: 0 0;
    }
}

.rio-content-loading {
    background-image: linear-gradient(
        to right,
        transparent 10%,
        var(--rio-local-accent-bg) 12%,
        transparent 14%
    );
    background-size: 100rem 5rem;
    animation: content-loading 3s linear infinite;
}

// For containers that want to ignore their child's size request. This is useful
// for
// 1. Elements with an aspect ratio, like images and videos
// 2. ScrollContainers
//
// (For things like images and videos, you may need to create a container element
// around the `<img>` or `<video>` element.)
// In both cases, the parent element doesn't care about the size of its child
// element. The child element simply receives all the space that's available,
// and can never force the parent element to grow.
.rio-zero-size-request-container {
    position: relative;
}

.rio-zero-size-request-container > * {
    position: absolute;
    width: 100%;
    height: 100%;
}

// General
.rio-single-container {
    display: inline-grid;
    align-items: stretch;
    justify-content: stretch;
    min-width: fit-content;
}

a {
    color: var(--rio-local-accent-bg);
}

code {
    font-family: 'Roboto Mono', monospace;
}

html {
    background: var(--rio-global-background-bg);

    width: 100vw;
    height: 100vh;
}

body {
    margin: 0;
    padding: 0;

    font-family: Roboto, sans-serif;
}

// The root element for the component tree. It should display scrollbars if the
// components grow too large for the screen.
//
// This is a little simpler than the `ScrollContainer` component, because our
// child element is always the `RootContainer` from python, which doesn't have a
// `width` or `height` set.
.component-root {
    position: relative;
}

.component-root > * {
    overflow: auto;

    position: absolute;
    width: 100%;
    height: 100%;
}

.component-root > * > * {
    min-width: 100%;
    min-height: 100%;
}

// Some components, for example `Stack`, need a `min-width` or `min-height`. But
// the `width` and `height` assigned in python also need to be taken into
// account. (Even though it's called `width` in python, in css it's actually the
// `min-width`.) So instead of assigning fixed `width` and `height` values to
// the HTML element, JS will assign `--min-width` and `--min-height` variables.
// Then the CSS can use `min-width: max(var(--min-width), ...)` to get the
// correct result.
.rio-component {
    box-sizing: border-box;

    min-width: var(--min-width);
    min-height: var(--min-height);
}

// Align
.rio-align {
    position: relative;
}

.rio-align > * {
    pointer-events: none;
    position: relative;
}

// Margin
.rio-margin {
    pointer-events: none;

    // We actually use padding instead of margin. Make sure that the padding
    // is included in the width/height of the element.
    box-sizing: border-box;
}

// Column
.rio-column,
.rio-column > div.rio-undefined-space + div {
    pointer-events: none;

    display: flex;
    flex-direction: column;
    align-items: stretch;
    min-width: fit-content;
}

// Row
.rio-row,
.rio-row > div.rio-undefined-space + div {
    pointer-events: none;

    display: flex;
    flex-direction: row;
    align-items: stretch;
}

// Undefined Space Highlight
@keyframes barber-pole {
    from {
        background-position: 0 0;
    }

    to {
        background-position: 2rem 0rem;
    }
}

.rio-undefined-space {
    pointer-events: auto;
    flex-grow: 1;

    background-image: linear-gradient(
        -45deg,
        black 25%,
        var(--rio-global-warning-bg) 25%,
        var(--rio-global-warning-bg) 50%,
        black 50%,
        black 75%,
        var(--rio-global-warning-bg) 75%,
        var(--rio-global-warning-bg)
    );
    background-size: 2rem 2rem;
    animation: barber-pole 0.7s linear infinite;
}

// Grid
.rio-grid {
    pointer-events: none;
    display: grid;
}

// Text
.rio-text {
    pointer-events: auto;
    display: flex;
    align-items: center;
    justify-content: center;

    color: var(--rio-local-text-color);
}

// Rectangle
.rio-rectangle {
    pointer-events: auto;
    border-style: solid;

    transition-timing-function: ease; // The transition time is set via JS

    // overflow: hidden; // Correct, but causes issues with dropdowns

    /*
    The following attributes are controlled via variables, to allow JavaScript
    to change them, even on pseudo-classes.
    */
    background: var(--rectangle-background);
    border-color: var(--rectangle-stroke-color);
    border-width: var(--rectangle-stroke-width);
    border-radius: var(--rectangle-corner-radius-top-left)
        var(--rectangle-corner-radius-top-right)
        var(--rectangle-corner-radius-bottom-right)
        var(--rectangle-corner-radius-bottom-left);
    box-shadow: var(--rectangle-shadow-offset-x)
        var(--rectangle-shadow-offset-y) var(--rectangle-shadow-radius)
        var(--rectangle-shadow-color);
}

.rio-rectangle-ripple {
    overflow: hidden;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-rectangle-hover:hover {
    background: var(--rectangle-background-hover);
    border-color: var(--rectangle-stroke-color-hover);
    border-width: var(--rectangle-stroke-width-hover);
    border-radius: var(--rectangle-corner-radius-top-left-hover)
        var(--rectangle-corner-radius-top-right-hover)
        var(--rectangle-corner-radius-bottom-right-hover)
        var(--rectangle-corner-radius-bottom-left-hover);
    box-shadow: var(--rectangle-shadow-offset-x-hover)
        var(--rectangle-shadow-offset-y-hover)
        var(--rectangle-shadow-radius-hover) var(--rectangle-shadow-color-hover);
}

// Text Input
.rio-text-input {
    pointer-events: auto;

    position: relative;
    min-width: 6rem;
    min-height: 2.3rem;

    display: flex;
    flex-direction: row;
    align-items: end;

    background-color: var(--rio-local-plain-bg-variant);

    border-radius: var(--rio-global-corner-radius-small)
        var(--rio-global-corner-radius-small) 0 0;
}

.rio-text-input:not(.rio-disabled-input) {
    // Ripple
    overflow: hidden;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-text-input:focus-within {
    outline: none;
    background-color: var(--rio-local-plain-bg-active);
}

.rio-text-input > input {
    order: 1;

    position: relative;
    top: 0;
    bottom: 0;
    margin: 0;
    flex-grow: 1;

    background-color: transparent;
    color: var(--rio-local-text-color);
    caret-color: var(--rio-local-accent-bg);
    padding: 0.5rem;
    border: none;
    font-size: 1rem;
}

.rio-text-input > input:active {
    background-color: transparent;
}

.rio-text-input > input:focus-visible {
    outline: none;
}

.rio-text-input-hint-text {
    margin-bottom: 0.5rem;

    color: var(--rio-local-text-color);

    opacity: 0;
    transition: all 0.13s linear;
}

input:not(:placeholder-shown) ~ .rio-text-input-hint-text,
.rio-text-input:focus-within > .rio-text-input-hint-text {
    opacity: 0.5;
}

.rio-text-input-label {
    pointer-events: none;

    position: absolute;
    left: 1.5rem;
    top: calc(50% - 0.5rem);
    font-size: 1rem;
    color: var(--rio-local-text-color);
    opacity: 0.5;

    transition: all 0.13s linear;
}

input:not(:placeholder-shown) ~ .rio-text-input-label,
.rio-text-input:focus-within > .rio-text-input-label {
    opacity: 1;
    top: 0.5rem;
    bottom: unset;
    font-size: 0.8rem;
}

.rio-text-input:focus-within > .rio-text-input-label {
    color: var(--rio-local-accent-bg);
}

.rio-text-input-plain-bar,
.rio-text-input-color-bar {
    position: absolute;
    bottom: 0;
    height: 0.17rem;
}

.rio-text-input-plain-bar {
    background-color: rgba(0, 0, 0, 0.2);
    left: 0;
    right: 0;
}

.rio-text-input-color-bar {
    background-color: var(--rio-local-accent-bg);

    left: 40%;
    right: 40%;
    opacity: 0;

    transition: all 0.13s ease-in-out;
}

.rio-text-input:focus-within .rio-text-input-color-bar {
    left: 0;
    right: 0;
    opacity: 1;
}

// Stack
.rio-stack {
    pointer-events: none;
    display: inline-grid;
}

.rio-stack > * {
    grid-column-start: 1;
    grid-row-start: 1;
}

// Switch
.rio-switch .container {
    pointer-events: auto;
    position: relative;
    width: 3.18rem;
    height: 1.54rem;
    margin: auto;
    border-radius: 4.3rem;
    background-color: var(--rio-global-disabled-bg-variant);
    transition: 0.3s ease all;
    z-index: 1;
}

.rio-switch.is-on .container {
    background-color: var(--rio-local-accent-bg);
}

.rio-switch input {
    position: relative;
    width: 100%;
    height: 100%;
    padding: 0;
    margin: 0;
    opacity: 0;
    cursor: pointer;
    z-index: 3;
}

.rio-switch .knob {
    z-index: 2;
    position: absolute;
    top: 0.17rem;
    left: 0.17rem;
    width: 0.86rem;
    height: 0.43rem;
    padding: 0.39em 0.17rem;
    background-color: var(--rio-global-disabled-bg);
    border-radius: 50%;
    transition:
        0.3s ease all,
        left 0.3s cubic-bezier(0.18, 0.89, 0.35, 1.15);
}

.rio-switch input:active + .knob {
    width: 1.98rem;
    border-radius: 4.3rem;
}

.rio-switch.is-on input:active + .knob {
    margin-left: -1.12rem;
}

.rio-switch.is-on input + .knob {
    left: 1.8rem;
    background-color: var(--rio-local-plain-bg);
}

// Dropdown
.rio-dropdown {
    pointer-events: auto;

    position: relative;
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.rio-dropdown > .rio-text-input {
    flex-grow: 1;
}

.rio-dropdown-popup {
    top: 100%;
    left: 0;
    width: 100%;

    background-color: var(--rio-global-background-bg);
    color: var(--rio-global-text-color);
    border-radius: 0 0 var(--rio-global-corner-radius-small)
        var(--rio-global-corner-radius-small);

    box-shadow: 0 0 0.8rem var(--rio-global-shadow-color);
}

.rio-dropdown > .rio-text-input > .rio-icon-revealer-arrow {
    pointer-events: none;

    position: absolute;
    top: 50%;
    right: 1rem;
    width: 1.3rem;
    height: 1.3rem;

    transform: translateY(-50%);
}

.rio-dropdown-options {
    flex-grow: 1;

    display: flex;
    flex-direction: column;
    align-items: stretch;
    cursor: pointer;
}

.rio-dropdown-options > * {
    padding: 1rem 1rem;
    transition: background-color 0.1s ease-in-out;
}

.rio-dropdown-options > *:hover {
    background-color: var(--rio-local-plain-bg-active);
}

.rio-dropdown-options > * + * {
    border-top: 1px solid var(--rio-global-text-on-surface-color);
}

.rio-dropdown-popup {
    position: absolute;
    display: flex;
    align-items: stretch;
    z-index: $z-index-popup;

    overflow: hidden;

    max-height: 0;
    transition: max-height 0.14s ease-out;
}

// Progress Circle
.rio-progress-circle {
    pointer-events: auto;
    stroke: var(--rio-local-accent-bg);

    // Since the svg inside is rotating, the corners of its bounding box will
    // stick out. This can cause frequent re-layouting. To prevent this, we
    // hide the overflow.
    overflow: hidden;
}

.rio-progress-circle circle {
    fill: none;
    stroke-width: 3.5;
    color: var(--rio-local-accent-bg);
}

.spinning svg {
    transform-origin: center;
    animation: rotate 2s linear infinite;
}

.spinning .progress {
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
}

.rio-progress-circle:not(.spinning) .progress {
    stroke-dashoffset: -94.25;
    stroke-dasharray: var(--dasharray);
    transition: stroke-dasharray 0.5s ease;
}


@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dash {
    0% {
        stroke-dasharray: 1, 200;
        stroke-dashoffset: 0;
    }

    50% {
        stroke-dasharray: 90, 200;
        stroke-dashoffset: -35px;
    }

    100% {
        stroke-dashoffset: -125px;
    }
}

// Button
.rio-button {
    pointer-events: auto;
    transition:
        background-color 0.1s ease-in-out,
        color 0.1s ease-in-out,
        border-color 0.1s ease-in-out;

    overflow: hidden; // Needed for the ripple effect
}

.rio-button:not(.rio-switcheroo-disabled) {
    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-buttonstyle-major {
    background: var(--rio-local-plain-bg);
    --rio-local-text-color: var(--rio-local-text-color);
    --rio-local-text-font-weight: bold;

    box-shadow: 0 0 0 transparent;
    transition: box-shadow 0.2s ease-in-out;
}

.rio-buttonstyle-major:hover:not(.rio-switcheroo-disabled) {
    background: var(--rio-local-plain-bg);
    cursor: pointer;

    box-shadow: 0 0.1rem 0.22rem rgba(0, 0, 0, 0.35);
}

.rio-buttonstyle-minor {
    outline: 0.1em solid var(--rio-local-plain-bg);
    --rio-local-text-color: var(--rio-local-plain-bg);
}

.rio-buttonstyle-minor:hover:not(.rio-switcheroo-disabled) {
    background: var(--rio-local-plain-bg);
    --rio-local-text-color: var(--rio-local-text-color);
    cursor: pointer;
}

// Shapes
.rio-shape-pill {
    border-radius: $infinite-corner-radius;
}

.rio-shape-rounded {
    border-radius: var(--rio-global-corner-radius-small);
}

.rio-shape-rectangle {
    border-radius: 0; // Not necessary, just for consistency
}

.rio-shape-circle {
    border-radius: 50%;
}

// Revealer
.rio-revealer-header {
    pointer-events: auto;
    cursor: pointer;
    padding: 0.8rem;
    width: calc(100% - 1.6rem); // Subtract padding
    text-align: left;
    display: flex;
    flex-direction: row;
    color: var(--rio-local-text-color);
}

.rio-revealer-label {
    flex-grow: 1;
}

.rio-revealer-header > .rio-icon-revealer-arrow {
    width: 1.3rem;
    height: 1.3rem;
    margin-left: 0.5rem;
    margin-right: 0.5rem;

    fill: var(--rio-local-text-color);
    opacity: 0.7;

    transform: rotate(90deg);
    transition: transform 0.4s ease-in-out;
}

.rio-revealer-header > .rio-icon-revealer-arrow .expanded {
    transform: rotate(0deg);
}

.rio-revealer-content-outer {
    overflow: hidden;
    transition: max-height 0.15s ease-in-out;
}

.rio-revealer-content-inner {
    padding: 0.8rem;
    transition:
        opacity 0.25s ease-in-out,
        transform 0.25s ease;
}

// Icon
.rio-icon {
    pointer-events: auto;
}

// Error popup
.rio-error-popup {
    pointer-events: none;

    z-index: $z-index-error-popup;
    position: fixed;
    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.5);

    // This is immediately changed by JavaScript to effect a fade-in
    opacity: 0;

    transition: opacity 0.7s ease-in;
}

.rio-error-popup > div {
    pointer-events: auto;
    position: fixed;
    top: 2rem;
    left: 50%;
    width: unset;
    height: unset;

    display: flex;
    align-items: center;
    gap: 0.8rem;

    color: var(--rio-global-danger-bg);
    background: var(--rio-global-neutral-bg);
    padding: 1.5rem;
    border-radius: $infinite-corner-radius;
    box-shadow: 0 0 1rem var(--rio-global-shadow-color);

    // This is immediately changed by JavaScript to effect a fade-in
    transform: translate(-50%, -200%);

    transition: transform 0.4s $transition-timing-overshoot;
    transition-delay: transform 0.2s;
}

// Slideshow
.rio-slideshow {
    pointer-events: auto;
    position: relative;
    overflow: hidden;
}

.slideshow-child-container {
    position: relative;
    display: grid;
    width: 100%;
    height: 100%;
}

.slideshow-child-container > div {
    grid-column-start: 1;
    grid-row-start: 1;
    width: 100%;
    height: 100%;
}

.slideshow-child-container > div > * {
    grid-column-start: 1;
    grid-row-start: 1;
    width: 100%;
    height: 100%;
}

.slideshow-progress {
    position: absolute;
    bottom: 0;

    width: 100%;
    height: 0.3rem;
    background-color: var(--rio-local-accent-bg);
}

// Overlay
.rio-overlay {
    pointer-events: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: $z-index-overlay;
}

// Spacer
.rio-spacer {
    pointer-events: none;
}

// MediaPlayer
.rio-media-player {
    pointer-events: auto;
}

// Markdown
.rio-markdown-view {
    pointer-events: auto;
    --rio-padding: calc(0.5rem + var(--rio-global-corner-radius-small));
}

.rio-markdown-view {
    color: var(--rio-local-text-color);

    ul {
        margin: 0;
        padding-left: 1em;
        list-style-type: none;
    }

    ul > li {
        margin-bottom: 0.4em;
    }

    ul > li:before {
        content: '- ';
        font-weight: bold;
    }

    p > code {
        font-family: 'Roboto Mono', monospace;
        background: var(--rio-local-plain-bg-variant);
        border-radius: var(--rio-global-corner-radius-small);
        padding: 0.1em 0.3em;
    }
}

.rio-markdown-code-block {
    background: var(--rio-local-plain-bg-variant);
    border-radius: var(--rio-global-corner-radius-small);
}

.rio-markdown-code-block-header {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    color: var(--rio-local-text-color);
}

.rio-markdown-code-block-header > * {
    padding: var(--rio-padding);
}

.rio-markdown-code-block-language {
    font-family: Roboto, sans-serif;
    font-size: 0.8rem;
    font-weight: bold;
    opacity: 0.4;
}

.rio-markdown-code-block-copy-button {
    min-width: 6rem;
    min-height: 2.3rem;
    cursor: pointer;
    font-family: Roboto, sans-serif;
    font-size: 0.8rem;
    border: none;
    background: none;
    border-radius: var(--rio-global-corner-radius-small);
    margin: 0;
    color: var(--rio-local-text-color);
    font-weight: bold;
    opacity: 0.4;

    transition:
        color 0.2s ease-in-out,
        opacity 0.2s ease-in-out;
}

.rio-markdown-code-block-copy-button:hover {
    color: var(--rio-local-accent-bg);
    opacity: 1;
}

.rio-markdown-code-block > code {
    font-size: 1rem;
    display: block;
    padding: 0 var(--rio-padding) var(--rio-padding) var(--rio-padding);
}

.rio-markdown-view {
    h1 {
        font-family: var(--rio-global-heading1-font-name);
        color: var(--rio-local-heading1-color);
        font-size: var(--rio-global-heading1-font-size);
        font-style: var(--rio-global-heading1-italic);
        font-weight: var(--rio-global-heading1-font-weight);
        text-decoration: var(--rio-global-heading1-underlined);
        text-transform: var(--rio-global-heading1-all-caps);

        margin-top: 0;

        :not(:first-child) {
            margin-top: 2em;
        }
    }

    h2 {
        font-family: var(--rio-global-heading2-font-name);
        color: var(--rio-local-heading2-color);
        font-size: var(--rio-global-heading2-font-size);
        font-style: var(--rio-global-heading2-italic);
        font-weight: var(--rio-global-heading2-font-weight);
        text-decoration: var(--rio-global-heading2-underlined);
        text-transform: var(--rio-global-heading2-all-caps);

        margin-top: 0;

        :not(:first-child) {
            margin-top: 1.5em;
        }
    }

    h3 {
        font-family: var(--rio-global-heading3-font-name);
        color: var(--rio-local-heading3-color);
        font-size: var(--rio-global-heading3-font-size);
        font-style: var(--rio-global-heading3-italic);
        font-weight: var(--rio-global-heading3-font-weight);
        text-decoration: var(--rio-global-heading3-underlined);
        text-transform: var(--rio-global-heading3-all-caps);

        margin-top: 0;

        :not(:first-child) {
            margin-top: 1em;
        }
    }

    p {
        font-family: var(--rio-global-text-font-name);
        color: var(--rio-local-text-color);
        font-size: var(--rio-global-text-font-size);
        font-style: var(--rio-global-text-italic);
        font-weight: var(--rio-global-text-font-weight);
        text-decoration: var(--rio-global-text-underlined);
        text-transform: var(--rio-global-text-all-caps);
    }
}

// Link
.rio-link {
    pointer-events: auto;
}

.rio-text-link {
    color: var(--rio-local-accent-bg);
    cursor: pointer;
}

// Slider
.rio-slider {
    pointer-events: auto;
}

// ScrollContainer
.rio-scroll-container {
    // Needs pointer events so that the scrollbar can be interacted with
    pointer-events: auto;
}

.rio-scroll-container > * > * {
    min-width: 100%;
    min-height: 100%;
}

// Color Picker
.rio-color-picker {
    pointer-events: none;

    min-width: 10rem;
    display: flex;
    flex-direction: column;
    align-items: stretch;
}

.rio-color-picker-color-square {
    pointer-events: auto;

    position: relative;
    min-height: 6rem;
    cursor: crosshair;
    margin-bottom: 0.7rem;
    border-radius: 0.45rem;
    flex-grow: 1;
}

.rio-color-picker-slider-outer {
    pointer-events: auto;

    position: relative;
    padding: 0.7rem 0;
}

.rio-color-slider-inner {
    height: 0.9rem;
    cursor: crosshair;
    border-radius: 99rem;
}

.rio-color-picker-knob {
    width: 1.4rem;
    height: 1.4rem;
    border-radius: 50%;
    border: 0.2rem solid white;
    position: absolute;
    transform: translate(-50%, -50%);
    box-sizing: border-box;
    background: var(--chosen-color-opaque);

    /* Allow clicking through the knob */
    pointer-events: none;
    cursor: crosshair;
}

.rio-color-picker-slider-outer > .rio-color-picker-knob {
    top: 50%;
}

.color-slider-checkers {
    border-radius: 99rem;
}

.rio-color-picker-hue-bar > .rio-color-slider-inner {
    background: linear-gradient(
        to right,
        red,
        yellow,
        lime,
        aqua,
        blue,
        magenta,
        red
    );
}

.rio-color-picker-opacity-bar > .rio-color-slider-inner:not(.rio-checkered) {
    position: absolute;
    top: 0.7rem;
    left: 0;
    right: 0;
    bottom: 0.7rem;

    background: linear-gradient(
        to right,
        transparent,
        var(--chosen-color-opaque)
    );
}

.rio-color-picker-result-container {
    margin-top: 0.5rem;
    margin-left: auto;
    margin-right: auto;

    display: flex;
    align-items: center;
    gap: 0.8rem;
}

.rio-color-picker-selected-color-circle {
    position: relative;
    width: 2.5rem;
    height: 2.5rem;
}

.rio-color-picker-selected-color-circle > * {
    width: 100%;
    height: 100%;
    border-radius: 50%;
}

.rio-color-picker-selected-color-circle > div:first-child {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    background: var(--chosen-color-transparent);
}

.rio-color-picker-selected-color-circle-color {
    background: var(--chosen-color-transparent);
}

.rio-color-picker-selected-color-label {
    pointer-events: auto;
    opacity: 0.25;

    /* Fixed width to avoid movement when the value changes */
    width: 5rem;

    /* Text style */
    font-family: Roboto;
    font-size: 0.9rem;
    text-align: center;
    font-weight: bold;

    /* Override the default styling */
    background: transparent;
    border: none;
    padding: 0.3rem;
    border-radius: 0.5rem;

    transition:
        opacity 0.1s ease-in-out,
        color 0.1s ease-in-out,
        background-color 0.1s ease-in-out;
}

.rio-color-picker-selected-color-label:focus {
    outline: none;

    opacity: 1;
    color: var(--rio-local-accent-bg);
    background: var(--rio-local-plain-bg-variant);
}

.rio-checkered {
    --checker-color: #888;
    --checker-size: 0.9rem;

    background-image: linear-gradient(
            45deg,
            var(--checker-color) 25%,
            transparent 25%
        ),
        linear-gradient(45deg, transparent 75%, var(--checker-color) 75%),
        linear-gradient(45deg, transparent 75%, var(--checker-color) 75%),
        linear-gradient(45deg, var(--checker-color) 25%, transparent 25%);

    background-size: var(--checker-size) var(--checker-size);
    background-position:
        0 0,
        0 0,
        calc(var(--checker-size) * -0.5) calc(var(--checker-size) * -0.5),
        calc(var(--checker-size) * 0.5) calc(var(--checker-size) * 0.5);
}

// Drawer
$drawer-side-margin: 0.7rem;

.rio-drawer {
    pointer-events: auto;
    position: relative;
    overflow: hidden;
    transition: background-color 0.5s ease-in-out;

    display: flex;
    align-items: stretch;
}

.rio-drawer-anchor {
    flex-grow: 1;
}

.rio-drawer-content {
    position: absolute;
    background-color: var(--rio-global-surface-color);

    box-shadow: 0 0 1rem var(--rio-global-shadow-color);

    transition: transform 0.5s ease-out;
}

.rio-drawer-left,
.rio-drawer-right {
    min-height: 8rem;
}

.rio-drawer-top,
.rio-drawer-bottom {
    min-width: 8rem;
}

.rio-drawer-left > .rio-drawer-content {
    top: $drawer-side-margin;
    left: 0;
    bottom: $drawer-side-margin;
    width: min-content;

    border-radius: 0 var(--rio-global-corner-radius-large)
        var(--rio-global-corner-radius-large) 0;
}

.rio-drawer-right > .rio-drawer-content {
    top: $drawer-side-margin;
    right: 0;
    bottom: $drawer-side-margin;
    width: min-content;

    border-radius: var(--rio-global-corner-radius-large) 0 0
        var(--rio-global-corner-radius-large);
}

.rio-drawer-top > .rio-drawer-content {
    left: $drawer-side-margin;
    top: 0;
    right: $drawer-side-margin;
    height: min-content;

    border-radius: 0 0 var(--rio-global-corner-radius-large)
        var(--rio-global-corner-radius-large);
}

.rio-drawer-bottom > .rio-drawer-content {
    left: $drawer-side-margin;
    bottom: 0;
    right: $drawer-side-margin;
    height: min-content;

    border-radius: var(--rio-global-corner-radius-large)
        var(--rio-global-corner-radius-large) 0 0;
}

.rio-drawer-no-transition {
    transition: none !important;
}

.rio-drawer-no-transition > * {
    transition: none !important;
}

// Popup
.rio-popup {
    z-index: $z-index-popup;
}

.rio-popup-content {
    position: fixed;

    width: min-content;
    height: min-content;

    background-color: var(--rio-local-plain-bg);
    border-radius: var(--rio-global-corner-radius-medium);
    box-shadow: 0 0 1rem var(--rio-global-shadow-color);

    transform: scale(0);
    opacity: 0;

    transition:
        transform 0.2s linear,
        opacity 0.1s ease-in-out;
}

.rio-popup-open > .rio-popup-content {
    transform: scale(1);
    opacity: 1;

    transition:
        transform 0.2s $transition-timing-overshoot,
        opacity 0.1s ease-in-out;
}

// Image
.rio-image > * {
    display: flex;
    align-items: center;
    justify-content: center;

    max-width: 100%;
    max-height: 100%;
}

// Card
.rio-card {
    pointer-events: auto;
    background-color: var(--rio-local-plain-bg);
    box-shadow: 0 0 0 var(--rio-global-shadow-color);

    transition:
        box-shadow 0.15s ease-in-out,
        background-color 0.15s ease-in-out;
}

.rio-card-elevate-on-hover:hover {
    box-shadow: 0 0.15rem 0.3rem var(--rio-global-shadow-color);
}

.rio-card-colorize-on-hover:hover {
    background-color: var(--rio-local-plain-bg-active);
}

// SwitcherBar
.rio-switcher-bar {
    pointer-events: auto;
    display: flex;
    align-items: stretch;
    gap: 1;
}

.rio-switcher-bar > * {
    position: relative;
    padding: 0.4rem;

    cursor: pointer;

    // MDC Ripple
    // overflow: hidden;
    border-radius: $infinite-corner-radius;

    @include ripple.surface;
    @include ripple.radius-bounded;
    @include ripple.states;
}

.rio-switcher-bar-marker {
    background: var(--rio-local-plain-bg);
    opacity: 0.3;

    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;

    border-radius: $infinite-corner-radius;

    transition:
        left 0.4s $transition-timing-overshoot,
        top 0.4s $transition-timing-overshoot,
        right 0.4s $transition-timing-overshoot,
        bottom 0.4s $transition-timing-overshoot;
}

// SVG Images
.rio-icon-revealer-arrow {
    // TODO: Is there an icon this corresponds to?
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path d="M8.12 9.29 12 13.17l3.88-3.88c.39-.39 1.02-.39 1.41 0 .39.39.39 1.02 0 1.41l-4.59 4.59c-.39.39-1.02.39-1.41 0L6.7 10.7c-.39-.39-.39-1.02 0-1.41.39-.38 1.03-.39 1.42 0z"/></svg>');
    background-size: 100% 100%;
}

.rio-icon-error {
    // Corresponds to the icon `material/error`
    background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 -960 960 960"><path d="M479.928-274.022q16.463 0 27.398-10.743 10.935-10.743 10.935-27.206 0-16.464-10.863-27.518-10.862-11.055-27.326-11.055-16.463 0-27.398 11.037-10.935 11.037-10.935 27.501 0 16.463 10.863 27.224 10.862 10.76 27.326 10.76Zm3.247-158.739q14.499 0 24.195-9.821 9.695-9.82 9.695-24.244v-188.935q0-14.424-9.871-24.244-9.871-9.821-24.369-9.821-14.499 0-24.195 9.821-9.695 9.82-9.695 24.244v188.935q0 14.424 9.871 24.244 9.871 9.821 24.369 9.821Zm-2.876 358.74q-84.202 0-158.041-31.879t-129.159-87.199q-55.32-55.32-87.199-129.201-31.878-73.88-31.878-158.167t31.878-158.2q31.879-73.914 87.161-128.747 55.283-54.832 129.181-86.818 73.899-31.986 158.205-31.986 84.307 0 158.249 31.968 73.942 31.967 128.756 86.768 54.815 54.801 86.79 128.883 31.976 74.083 31.976 158.333 0 84.235-31.986 158.07t-86.818 128.942q-54.833 55.107-128.873 87.169-74.04 32.063-158.242 32.063Zm.201-68.131q140.543 0 238.946-98.752 98.402-98.752 98.402-239.596 0-140.543-98.215-238.946-98.215-98.402-239.753-98.402-140.163 0-238.945 98.215-98.783 98.215-98.783 239.753 0 140.163 98.752 238.945 98.752 98.783 239.596 98.783ZM480-480Z" /></svg>');
    background-size: 100% 100%;
}
