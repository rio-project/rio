{"version":3,"sources":["text.ts","row.ts","column.ts","rectangle.ts","stack.ts","margin.ts","align.ts","mouseEventListener.ts","textInput.ts","override.ts","placeholder.ts","app.ts"],"names":[],"mappings":"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","file":"app.js","sourceRoot":"","sourcesContent":["import { JsonText } from './models';\nimport { colorToCss } from './app';\n\nexport class TextWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-text');\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonText): void {\n        if (deltaState.text !== undefined) {\n            element.innerText = deltaState.text;\n        }\n\n        if (deltaState.multiline !== undefined) {\n            element.style.whiteSpace = deltaState.multiline\n                ? 'normal'\n                : 'nowrap';\n        }\n\n        if (deltaState.font !== undefined) {\n            element.style.fontFamily = deltaState.font;\n        }\n\n        if (deltaState.font_color !== undefined) {\n            element.style.color = colorToCss(deltaState.font_color);\n        }\n\n        if (deltaState.font_size !== undefined) {\n            element.style.fontSize = deltaState.font_size + 'em';\n        }\n\n        if (deltaState.font_weight !== undefined) {\n            element.style.fontWeight = deltaState.font_weight;\n        }\n\n        if (deltaState.italic !== undefined) {\n            element.style.fontStyle = deltaState.italic ? 'italic' : 'normal';\n        }\n\n        if (deltaState.underlined !== undefined) {\n            element.style.textDecoration = deltaState.underlined\n                ? 'underline'\n                : 'none';\n        }\n    }\n}\n","import { replaceChildren } from './app';\nimport { JsonRow } from './models';\n\nexport class RowWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-row');\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonRow): void {\n        replaceChildren(element, deltaState.children);\n    }\n}\n","import { replaceChildren } from './app';\nimport { JsonColumn } from './models';\n\nexport class ColumnWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-column');\n\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonColumn): void {\n        replaceChildren(element, deltaState.children);\n    }\n}\n","import { fillToCss, replaceOnlyChild } from './app';\nimport { JsonRectangle } from './models';\n\nexport class RectangleWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-rectangle');\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonRectangle): void {\n        replaceOnlyChild(element, deltaState.child);\n\n        if (deltaState.fill !== undefined) {\n            element.style.background = fillToCss(deltaState.fill);\n        }\n\n        if (deltaState.corner_radius !== undefined) {\n            const [topLeft, topRight, bottomRight, bottomLeft] =\n                deltaState.corner_radius;\n            element.style.borderRadius = `${topLeft}em ${topRight}em ${bottomRight}em ${bottomLeft}em`;\n        }\n    }\n}\n","import { replaceChildren } from './app';\nimport { JsonStack } from './models';\n\nexport class StackWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-stack');\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonStack): void {\n        if (deltaState.children !== undefined) {\n            replaceChildren(element, deltaState.children);\n\n            let zIndex = 0;\n            for (let child of element.children) {\n                (child as HTMLElement).style.zIndex = `${zIndex}`;\n                zIndex += 1;\n            }\n        }\n    }\n}\n","import { replaceOnlyChild } from './app';\nimport { JsonMargin } from './models';\n\nexport class MarginWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        return element;\n    }\n\n    static update(element: HTMLElement, state: JsonMargin): void {\n        replaceOnlyChild(element, state.child);\n\n        if (state.margin_left !== undefined) {\n            element.style.marginLeft = `${state.margin_left}em`;\n        }\n\n        if (state.margin_top !== undefined) {\n            element.style.marginTop = `${state.margin_top}em`;\n        }\n\n        if (state.margin_right !== undefined) {\n            element.style.marginRight = `${state.margin_right}em`;\n        }\n\n        if (state.margin_bottom !== undefined) {\n            element.style.marginBottom = `${state.margin_bottom}em`;\n        }\n    }\n}\n","import { replaceOnlyChild } from './app';\nimport { JsonAlign } from './models';\n\nexport class AlignWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-align');\n        return element;\n    }\n\n    static update(element: HTMLElement, state: JsonAlign): void {\n        replaceOnlyChild(element, state.child);\n\n        let transform_x;\n        if (state.align_x !== undefined) {\n            if (state.align_x === null) {\n                element.style.left = 'unset';\n                transform_x = '0%';\n            } else {\n                element.style.left = `${state.align_x * 100}%`;\n                transform_x = `${state.align_x * -100}%`;\n            }\n        }\n\n        let transform_y;\n        if (state.align_y !== undefined) {\n            if (state.align_y === null) {\n                element.style.top = 'unset';\n                transform_y = '0%';\n            } else {\n                element.style.top = `${state.align_y * 100}%`;\n                transform_y = `${state.align_y * -100}%`;\n            }\n        }\n\n        element.style.transform = `translate(${transform_x}, ${transform_y})`;\n    }\n}\n","import { JsonMouseEventListener } from './models';\nimport { pixelsPerEm, replaceOnlyChild, sendEvent } from './app';\n\nfunction eventMouseButtonToString(event: MouseEvent): object {\n    return {\n        button: ['left', 'middle', 'right'][event.button],\n    };\n}\n\nfunction eventMousePositionToString(event: MouseEvent): object {\n    return {\n        x: event.clientX / pixelsPerEm,\n        y: event.clientY / pixelsPerEm,\n    };\n}\n\nexport class MouseEventListener {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-mouse-event-listener');\n        return element;\n    }\n\n    static update(\n        element: HTMLElement,\n        deltaState: JsonMouseEventListener\n    ): void {\n        replaceOnlyChild(element, deltaState.child);\n\n        if (deltaState.reportMouseDown) {\n            element.onmousedown = (e) => {\n                sendEvent(element, 'mouseDownEvent', {\n                    ...eventMouseButtonToString(e),\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmousedown = null;\n        }\n\n        if (deltaState.reportMouseUp) {\n            element.onmouseup = (e) => {\n                sendEvent(element, 'mouseUpEvent', {\n                    ...eventMouseButtonToString(e),\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmouseup = null;\n        }\n\n        if (deltaState.reportMouseMove) {\n            element.onmousemove = (e) => {\n                sendEvent(element, 'mouseMoveEvent', {\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmousemove = null;\n        }\n\n        if (deltaState.reportMouseEnter) {\n            element.onmouseenter = (e) => {\n                sendEvent(element, 'mouseEnterEvent', {\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmouseenter = null;\n        }\n\n        if (deltaState.reportMouseLeave) {\n            element.onmouseleave = (e) => {\n                sendEvent(element, 'mouseLeaveEvent', {\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmouseleave = null;\n        }\n    }\n}\n","import { JsonMouseEventListener, JsonTextInput } from './models';\nimport { pixelsPerEm, sendEvent } from './app';\n\nexport class TextInputWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('input');\n        element.classList.add('reflex-text-input');\n\n        element.addEventListener('blur', () => {\n            sendEvent(element, 'textInputBlurEvent', {\n                text: element.value,\n            });\n        });\n\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonTextInput): void {\n        let cast_element = element as HTMLInputElement;\n\n        if (deltaState.secret !== undefined) {\n            cast_element.type = deltaState.secret ? 'password' : 'text';\n        }\n\n        if (deltaState.text !== undefined) {\n            cast_element.value = deltaState.text;\n        }\n\n        if (deltaState.placeholder !== undefined) {\n            cast_element.placeholder = deltaState.placeholder;\n        }\n    }\n}\n","import { replaceOnlyChild } from './app';\nimport { JsonOverride } from './models';\n\nexport class OverrideWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonOverride): void {\n        replaceOnlyChild(element, deltaState.child);\n\n        if (deltaState.width !== undefined) {\n            if (deltaState.width === null) {\n                element.style.removeProperty('width');\n            } else {\n                element.style.width = `${deltaState.width}em`;\n            }\n        }\n\n        if (deltaState.height !== undefined) {\n            if (deltaState.height === null) {\n                element.style.removeProperty('height');\n            } else {\n                element.style.height = `${deltaState.height}em`;\n            }\n        }\n    }\n}\n","import { replaceOnlyChild } from './app';\nimport { JsonPlaceholder } from './models';\n\nexport class PlaceholderWidget {\n    static build(): HTMLElement {\n        let element = document.createElement('div');\n        return element;\n    }\n\n    static update(element: HTMLElement, deltaState: JsonPlaceholder): void {\n        replaceOnlyChild(element, deltaState._child_);\n    }\n}\n","import { TextWidget } from './text';\nimport { RowWidget } from './row';\nimport { ColumnWidget } from './column';\nimport { RectangleWidget } from './rectangle';\nimport { StackWidget } from './stack';\nimport { MarginWidget } from './margin';\nimport { AlignWidget } from './align';\nimport { Color, Fill, JsonWidget } from './models';\nimport { MouseEventListener } from './mouseEventListener';\nimport { TextInputWidget } from './textInput';\nimport { OverrideWidget } from './override';\nimport { PlaceholderWidget } from './placeholder';\n\nconst sessionToken = '{session_token}';\nconst initialMessages = '{initial_messages}';\n\nvar socket: WebSocket | null = null;\nexport var pixelsPerEm = 16;\n\nexport function colorToCss(color: Color): string {\n    const [r, g, b, a] = color;\n    return `rgba(${r * 255}, ${g * 255}, ${b * 255}, ${a})`;\n}\n\nexport function fillToCss(fill: Fill): string {\n    // Solid Color\n    if (fill.type === 'solid') {\n        return colorToCss(fill.color);\n    }\n\n    // Linear Gradient\n    if (fill.type === 'linearGradient') {\n        if (fill.stops.length == 1) {\n            return colorToCss(fill.stops[0][0]);\n        }\n\n        let stopStrings: string[] = [];\n        for (let i = 0; i < fill.stops.length; i++) {\n            let color = fill.stops[i][0];\n            let position = fill.stops[i][1];\n            stopStrings.push(`${colorToCss(color)} ${position * 100}%`);\n        }\n\n        return `linear-gradient(${fill.angleDegrees}deg, ${stopStrings.join(\n            ', '\n        )})`;\n    }\n\n    // Invalid fill type\n    throw `Invalid fill type: ${fill}`;\n}\n\nconst widgetClasses = {\n    align: AlignWidget,\n    column: ColumnWidget,\n    margin: MarginWidget,\n    rectangle: RectangleWidget,\n    row: RowWidget,\n    stack: StackWidget,\n    text: TextWidget,\n    mouseEventListener: MouseEventListener,\n    textInput: TextInputWidget,\n    override: OverrideWidget,\n    placeholder: PlaceholderWidget,\n};\n\nfunction processMessage(message: any) {\n    console.log('Received message: ', message);\n\n    if (message.type == 'updateWidgetStates') {\n        updateWidgetStates(message.deltaStates, message.rootWidgetId);\n    } else {\n        throw `Encountered unknown message type: ${message}`;\n    }\n}\n\nfunction updateWidgetStates(\n    message: { [id: number]: JsonWidget },\n    rootWidgetId: number | null\n) {\n    // Create a HTML element to hold all latent widgets, so they aren't\n    // garbage collected while updating the DOM.\n    let latentWidgets = document.createElement('div');\n    document.body.appendChild(latentWidgets);\n    latentWidgets.id = 'reflex-latent-widgets';\n    latentWidgets.style.display = 'none';\n\n    // Make sure all widgets mentioned in the message have a corresponding HTML\n    // element\n    for (let id in message) {\n        let deltaState = message[id];\n        let element = document.getElementById('reflex-id-' + id);\n\n        // This is a reused element, nothing to do\n        if (element) {\n            continue;\n        }\n\n        // Get the class for this widget\n        const widgetClass = widgetClasses[deltaState._type_];\n\n        // Make sure the widget type is valid (Just helpful for debugging)\n        if (!widgetClass) {\n            throw `Encountered unknown widget type: ${deltaState._type_}`;\n        }\n\n        // Build the widget\n        element = widgetClass.build();\n\n        // Add a unique ID to the widget\n        element.id = 'reflex-id-' + id;\n\n        // Add the common css class to the widget\n        element.classList.add('reflex-widget');\n\n        // Store the widget's class name in the element. Used for debugging.\n        element.setAttribute('dbg-py-class', deltaState._python_type_);\n\n        // Set the widget's key, if it has one. Used for debugging.\n        let key = deltaState['key'];\n        if (key !== undefined) {\n            element.setAttribute('dbg-key', `${key}`);\n        }\n\n        // Keep the widget alive\n        latentWidgets.appendChild(element);\n    }\n\n    // Update all widgets mentioned in the message\n    for (let id in message) {\n        let deltaState = message[id];\n        let element = document.getElementById('reflex-id-' + id);\n\n        if (!element) {\n            throw `Failed to find widget with id ${id}, despite only just creating it!?`;\n        }\n\n        const widgetClass = widgetClasses[deltaState._type_];\n        widgetClass.update(element!, deltaState as any);\n    }\n\n    // Replace the root widget if requested\n    if (rootWidgetId !== null) {\n        let rootElement = document.getElementById(`reflex-id-${rootWidgetId}`);\n        document.body.innerHTML = '';\n        document.body.appendChild(rootElement!);\n    }\n\n    // Remove the latent widgets\n    latentWidgets.remove();\n}\n\nexport function replaceOnlyChild(\n    parentElement: HTMLElement,\n    childId: null | undefined | number\n) {\n    // If undefined, do nothing\n    if (childId === undefined) {\n        return;\n    }\n\n    // If null, remove the child\n    if (childId === null) {\n        parentElement.innerHTML = '';\n        return;\n    }\n\n    // Move the child element to a latent container, so it isn't garbage\n    // collected\n    if (parentElement.firstElementChild !== null) {\n        let latentWidgets = document.getElementById('reflex-latent-widgets');\n        latentWidgets?.appendChild(parentElement.firstElementChild);\n    }\n\n    // Add the replacement widget\n    let newElement = document.getElementById('reflex-id-' + childId);\n\n    if (!newElement) {\n        throw `Failed to find replacement widget with id ${childId}`;\n    }\n\n    parentElement?.appendChild(newElement);\n}\n\nexport function replaceChildren(\n    parentElement: HTMLElement,\n    childIds: undefined | number[]\n) {\n    // If undefined, do nothing\n    if (childIds === undefined) {\n        return;\n    }\n\n    let latentWidgets = document.getElementById('reflex-latent-widgets')!;\n\n    let curElement = parentElement.firstElementChild;\n    let curIdIndex = 0;\n\n    while (true) {\n        // If there are no more children in the DOM element, add the remaining\n        // children\n        if (curElement === null) {\n            while (curIdIndex < childIds.length) {\n                let curId = childIds[curIdIndex];\n                let newElement = document.getElementById('reflex-id-' + curId);\n                parentElement.appendChild(newElement!);\n                curIdIndex++;\n            }\n            break;\n        }\n\n        // If there are no more children in the message, remove the remaining\n        // DOM children\n        if (curIdIndex >= childIds.length) {\n            while (curElement !== null) {\n                let nextElement = curElement.nextElementSibling;\n                latentWidgets.appendChild(curElement);\n                curElement = nextElement;\n            }\n            break;\n        }\n\n        // This element is the correct element, move on\n        let curId = childIds[curIdIndex];\n        if (curElement.id === 'reflex-id-' + curId) {\n            curElement = curElement.nextElementSibling;\n            curIdIndex++;\n            continue;\n        }\n\n        // This element is not the correct element, insert the correct one\n        // instead\n        let newElement = document.getElementById('reflex-id-' + curId);\n        parentElement.insertBefore(newElement!, curElement);\n        curIdIndex++;\n    }\n}\n\nfunction main() {\n    // Determine the browser's font size\n    var measure = document.createElement('div');\n    measure.style.height = '10em';\n    document.body.appendChild(measure);\n    pixelsPerEm = measure.offsetHeight / 10;\n    document.body.removeChild(measure);\n\n    // Process initial messages\n    console.log(`Processing ${initialMessages.length} initial message(s)`);\n    for (let message of initialMessages) {\n        processMessage(message);\n    }\n\n    // Connect to the websocket\n    var url = new URL(`/ws?sessionToken=${sessionToken}`, window.location.href);\n    url.protocol = url.protocol.replace('http', 'ws');\n    console.log(`Connecting websocket to ${url.href}`);\n    socket = new WebSocket(url.href);\n\n    socket.addEventListener('open', onOpen);\n    socket.addEventListener('message', onMessage);\n    socket.addEventListener('error', onError);\n    socket.addEventListener('close', onClose);\n}\n\nfunction onOpen() {\n    console.log('Connection opened');\n}\n\nfunction onMessage(event: any) {\n    // Parse the message JSON\n    let message = JSON.parse(event.data);\n\n    // Handle it\n    processMessage(message);\n}\n\nfunction onError(event: any) {\n    console.log(`Error: ${event.message}`);\n}\n\nfunction onClose(event: any) {\n    console.log(`Connection closed: ${event.reason}`);\n}\n\nexport function sendJson(message: object) {\n    if (!socket) {\n        console.log(\n            `Attempted to send message, but the websocket is not connected: ${message}`\n        );\n        return;\n    }\n\n    socket.send(JSON.stringify(message));\n}\n\nexport function sendEvent(\n    element: HTMLElement,\n    eventType: string,\n    eventArgs: object\n) {\n    sendJson({\n        type: eventType,\n        // Remove the leading `reflex-id-` from the element's ID\n        widgetId: parseInt(element.id.substring(10)),\n        ...eventArgs,\n    });\n}\n\nmain();\n"]}