{"version":3,"sources":["widgetBase.ts","text.ts","row.ts","column.ts","dropdown.ts","rectangle.ts","stack.ts","mouseEventListener.ts","textInput.ts","placeholder.ts","switch.ts","app.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAaA;AACA,IAAA,UAAA,GAAA,aAAA,YAAA;EAII,SAAA,UAAA,CAAY,SAAiB,EAAE,KAAkB,EAAA;IAC7C,IAAI,CAAC,SAAS,GAAG,SAAS;IAC1B,IAAI,CAAC,KAAK,GAAG,KAAK;EACtB;EAIA,MAAA,CAAA,cAAA,CAAI,UAAA,CAAA,SAAA,EAAA,SAAO,EAAA;IAFX;IACA;SACA,SAAA,IAAA,EAAA;MACI,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;MAErD,IAAI,OAAO,KAAK,IAAI,EAAE;QAClB,MAAM,IAAI,KAAK,CACX,+BAAA,CAAA,MAAA,CAAgC,IAAI,CAAC,SAAS,EAAA,0BAAA,CAA0B,CAC3E;;MAGL,OAAO,OAAO;IAClB,CAAC;;;;EAcD;EACA;EACA;EACA,UAAA,CAAA,SAAA,CAAA,oBAAoB,GAApB,UAAqB,OAAe,EAAA;IAChC,CAAA,CAAA,EAAA,KAAA,CAAA,wBAAwB,EAAC;MACrB,IAAI,EAAE,eAAe;MACrB;MACA,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;MAChD,OAAO,EAAE;KACZ,CAAC;EACN,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,0BAA0B,GAA1B,UAA2B,UAAkB,EAAA;IACzC,IAAI,CAAC,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACH,IAAI,CAAC,KAAK,CAAA,EACV,UAAU,CAChB;EACL,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,wBAAwB,GAAxB,UAAyB,UAAkB,EAAA;IACvC,IAAI,CAAC,0BAA0B,CAAC,UAAU,CAAC;IAC3C,CAAA,CAAA,EAAA,KAAA,CAAA,wBAAwB,EAAC;MACrB,IAAI,EAAE,mBAAmB;MACzB;MACA,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC;MAChD,UAAU,EAAE;KACf,CAAC;EACN,CAAC;EACL,OAAA,UAAC;AAAD,CA/DA,CAAA,CAAA;AAAsB,OAAA,CAAA,UAAA,GAAA,UAAA;AAiEtB,UAAU,CAAC,UAAU,GAAG,UAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9ElC,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAaA,IAAA,UAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAgC,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;EAAhC,SAAA,UAAA,CAAA,EAAA;;EA4CA;EA3CI,UAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC;IACpC,OAAO,OAAO;EAClB,CAAC;EAED,UAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAAqB,EAAA;IACrD,IAAI,UAAU,CAAC,IAAI,KAAK,SAAS,EAAE;MAC/B,OAAO,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI;;IAGvC,IAAI,UAAU,CAAC,SAAS,KAAK,SAAS,EAAE;MACpC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,GACzC,QAAQ,GACR,QAAQ;;IAGlB,IAAI,UAAU,CAAC,IAAI,KAAK,SAAS,EAAE;MAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,IAAI;;IAG9C,IAAI,UAAU,CAAC,UAAU,KAAK,SAAS,EAAE;MACrC,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,CAAA,CAAA,EAAA,KAAA,CAAA,UAAU,EAAC,UAAU,CAAC,UAAU,CAAC;;IAG3D,IAAI,UAAU,CAAC,SAAS,KAAK,SAAS,EAAE;MACpC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC,SAAS,GAAG,KAAK;;IAGzD,IAAI,UAAU,CAAC,WAAW,KAAK,SAAS,EAAE;MACtC,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,UAAU,CAAC,WAAW;;IAGrD,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE;MACjC,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,UAAU,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ;;IAGrE,IAAI,UAAU,CAAC,UAAU,KAAK,SAAS,EAAE;MACrC,OAAO,CAAC,KAAK,CAAC,cAAc,GAAG,UAAU,CAAC,UAAU,GAC9C,WAAW,GACX,MAAM;;EAEpB,CAAC;EACL,OAAA,UAAC;AAAD,CA5CA,CAAgC,YAAA,CAAA,UAAU,CAAA;AAA7B,OAAA,CAAA,UAAA,GAAA,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfb,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAQA,IAAA,SAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA+B,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;EAA/B,SAAA,SAAA,CAAA,EAAA;;EAcA;EAbI,SAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC;IACnC,OAAO,OAAO;EAClB,CAAC;EAED,SAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAAoB,EAAA;IACpD,CAAA,CAAA,EAAA,KAAA,CAAA,eAAe,EAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC;IAE7C,IAAI,UAAU,CAAC,OAAO,KAAK,SAAS,EAAE;MAClC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,EAAA,CAAA,MAAA,CAAG,UAAU,CAAC,OAAO,EAAA,KAAA,CAAK;;EAEtD,CAAC;EACL,OAAA,SAAC;AAAD,CAdA,CAA+B,YAAA,CAAA,UAAU,CAAA;AAA5B,OAAA,CAAA,SAAA,GAAA,SAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAQA,IAAA,YAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAkC,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;EAAlC,SAAA,YAAA,CAAA,EAAA;;EAcA;EAbI,YAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC;IACtC,OAAO,OAAO;EAClB,CAAC;EAED,YAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAAuB,EAAA;IACvD,CAAA,CAAA,EAAA,KAAA,CAAA,eAAe,EAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC;IAE7C,IAAI,UAAU,CAAC,OAAO,KAAK,SAAS,EAAE;MAClC,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,EAAA,CAAA,MAAA,CAAG,UAAU,CAAC,OAAO,EAAA,KAAA,CAAK;;EAEtD,CAAC;EACL,OAAA,YAAC;AAAD,CAdA,CAAkC,YAAA,CAAA,UAAU,CAAA;AAA/B,OAAA,CAAA,YAAA,GAAA,YAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAOA,IAAA,cAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAoC,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;EAApC,SAAA,cAAA,CAAA,EAAA;;EA0BA;EAzBI,cAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;IAC9C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC;IAExC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;MAC9B,KAAI,CAAC,wBAAwB,CAAC;QAC1B,KAAK,EAAE,OAAO,CAAC;OAClB,CAAC;IACN,CAAC,CAAC;IAEF,OAAO,OAAO;EAClB,CAAC;EAED,cAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAAyB,EAAA;IACzD,IAAI,UAAU,CAAC,WAAW,KAAK,SAAS,EAAE;MACtC,OAAO,CAAC,SAAS,GAAG,EAAE;MAEtB,KAAuB,IAAA,EAAA,GAAA,CAAsB,EAAtB,EAAA,GAAA,UAAU,CAAC,WAAW,EAAtB,EAAA,GAAA,EAAA,CAAA,MAAsB,EAAtB,EAAA,EAAsB,EAAE;QAA1C,IAAI,UAAU,GAAA,EAAA,CAAA,EAAA,CAAA;QACf,IAAI,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC;QAC7C,MAAM,CAAC,KAAK,GAAG,UAAU;QACzB,MAAM,CAAC,IAAI,GAAG,UAAU;QACxB,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC;;;EAGvC,CAAC;EACL,OAAA,cAAC;AAAD,CA1BA,CAAoC,YAAA,CAAA,UAAU,CAAA;AAAjC,OAAA,CAAA,cAAA,GAAA,cAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPb,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AAEA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAWA,IAAA,eAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAqC,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;EAArC,SAAA,eAAA,CAAA,EAAA;;EAgCA;EA/BI,eAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,kBAAkB,CAAC;IACzC,OAAO,OAAO;EAClB,CAAC;EAED,eAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAA0B,EAAA;IAC1D,CAAA,CAAA,EAAA,KAAA,CAAA,gBAAgB,EAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC;IAE3C,IAAI,UAAU,CAAC,IAAI,KAAK,SAAS,EAAE;MAC/B,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,CAAA,CAAA,EAAA,KAAA,CAAA,SAAS,EAAC,UAAU,CAAC,IAAI,CAAC;;IAGzD,IAAI,UAAU,CAAC,aAAa,KAAK,SAAS,EAAE;MAClC,IAAA,EAAA,GACF,UAAU,CAAC,aAAa;QADrB,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA;QAAE,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAA;QAAE,WAAW,GAAA,EAAA,CAAA,CAAA,CAAA;QAAE,UAAU,GAAA,EAAA,CAAA,CAAA,CACrB;MAC5B,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,EAAA,CAAA,MAAA,CAAG,OAAO,EAAA,MAAA,CAAA,CAAA,MAAA,CAAO,QAAQ,EAAA,MAAA,CAAA,CAAA,MAAA,CAAO,WAAW,EAAA,MAAA,CAAA,CAAA,MAAA,CAAO,UAAU,EAAA,KAAA,CAAK;;IAGlG,IAAI,UAAU,CAAC,YAAY,KAAK,SAAS,EAAE;MACvC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,EAAA,CAAA,MAAA,CAAG,UAAU,CAAC,YAAY,EAAA,KAAA,CAAK;;IAG/D,IAAI,UAAU,CAAC,YAAY,KAAK,SAAS,EAAE;MACvC,IAAI,UAAU,CAAC,YAAY,KAAK,IAAI,EAAE;QAClC,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,aAAa;OAC5C,MAAM;QACH,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,CAAA,CAAA,EAAA,KAAA,CAAA,UAAU,EAAC,UAAU,CAAC,YAAY,CAAC;;;EAG3E,CAAC;EACL,OAAA,eAAC;AAAD,CAhCA,CAAqC,YAAA,CAAA,UAAU,CAAA;AAAlC,OAAA,CAAA,eAAA,GAAA,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbb,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAOA,IAAA,WAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAiC,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;EAAjC,SAAA,WAAA,CAAA,EAAA;;EAkBA;EAjBI,WAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC;IACrC,OAAO,OAAO;EAClB,CAAC;EAED,WAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAAsB,EAAA;IACtD,IAAI,UAAU,CAAC,QAAQ,KAAK,SAAS,EAAE;MACnC,CAAA,CAAA,EAAA,KAAA,CAAA,eAAe,EAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC;MAE7C,IAAI,MAAM,GAAG,CAAC;MACd,KAAkB,IAAA,EAAA,GAAA,CAAgB,EAAhB,EAAA,GAAA,OAAO,CAAC,QAAQ,EAAhB,EAAA,GAAA,EAAA,CAAA,MAAgB,EAAhB,EAAA,EAAgB,EAAE;QAA/B,IAAI,KAAK,GAAA,EAAA,CAAA,EAAA,CAAA;QACT,KAAqB,CAAC,KAAK,CAAC,MAAM,GAAG,EAAA,CAAA,MAAA,CAAG,MAAM,CAAE;QACjD,MAAM,IAAI,CAAC;;;EAGvB,CAAC;EACL,OAAA,WAAC;AAAD,CAlBA,CAAiC,YAAA,CAAA,UAAU,CAAA;AAA9B,OAAA,CAAA,WAAA,GAAA,WAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAEA,SAAS,wBAAwB,CAAC,KAAiB,EAAA;EAC/C,OAAO;IACH,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,MAAM;GACnD;AACL;AAEA,SAAS,0BAA0B,CAAC,KAAiB,EAAA;EACjD,OAAO;IACH,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,KAAA,CAAA,WAAW;IAC9B,CAAC,EAAE,KAAK,CAAC,OAAO,GAAG,KAAA,CAAA;GACtB;AACL;AAYA,IAAA,wBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAA8C,SAAA,CAAA,wBAAA,EAAA,MAAA,CAAA;EAA9C,SAAA,wBAAA,CAAA,EAAA;;EAsEA;EArEI,wBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,6BAA6B,CAAC;IACpD,OAAO,OAAO;EAClB,CAAC;EAED,wBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UACI,OAAoB,EACpB,UAAmC,EAAA;IAFvC,IAAA,KAAA,GAAA,IAAA;IAII,CAAA,CAAA,EAAA,KAAA,CAAA,gBAAgB,EAAC,OAAO,EAAE,UAAU,CAAC,KAAK,CAAC;IAE3C,IAAI,UAAU,CAAC,eAAe,EAAE;MAC5B,OAAO,CAAC,WAAW,GAAG,UAAC,CAAC,EAAA;QACpB,KAAI,CAAC,oBAAoB,CAAA,QAAA,CAAA,QAAA,CAAA;UACrB,IAAI,EAAE;QAAW,CAAA,EACd,wBAAwB,CAAC,CAAC,CAAC,CAAA,EAC3B,0BAA0B,CAAC,CAAC,CAAC,CAAA,CAClC;MACN,CAAC;KACJ,MAAM;MACH,OAAO,CAAC,WAAW,GAAG,IAAI;;IAG9B,IAAI,UAAU,CAAC,aAAa,EAAE;MAC1B,OAAO,CAAC,SAAS,GAAG,UAAC,CAAC,EAAA;QAClB,KAAI,CAAC,oBAAoB,CAAA,QAAA,CAAA,QAAA,CAAA;UACrB,IAAI,EAAE;QAAS,CAAA,EACZ,wBAAwB,CAAC,CAAC,CAAC,CAAA,EAC3B,0BAA0B,CAAC,CAAC,CAAC,CAAA,CAClC;MACN,CAAC;KACJ,MAAM;MACH,OAAO,CAAC,SAAS,GAAG,IAAI;;IAG5B,IAAI,UAAU,CAAC,eAAe,EAAE;MAC5B,OAAO,CAAC,WAAW,GAAG,UAAC,CAAC,EAAA;QACpB,KAAI,CAAC,oBAAoB,CAAA,QAAA,CAAA;UACrB,IAAI,EAAE;QAAW,CAAA,EACd,0BAA0B,CAAC,CAAC,CAAC,CAAA,CAClC;MACN,CAAC;KACJ,MAAM;MACH,OAAO,CAAC,WAAW,GAAG,IAAI;;IAG9B,IAAI,UAAU,CAAC,gBAAgB,EAAE;MAC7B,OAAO,CAAC,YAAY,GAAG,UAAC,CAAC,EAAA;QACrB,KAAI,CAAC,oBAAoB,CAAA,QAAA,CAAA;UACrB,IAAI,EAAE;QAAY,CAAA,EACf,0BAA0B,CAAC,CAAC,CAAC,CAAA,CAClC;MACN,CAAC;KACJ,MAAM;MACH,OAAO,CAAC,YAAY,GAAG,IAAI;;IAG/B,IAAI,UAAU,CAAC,gBAAgB,EAAE;MAC7B,OAAO,CAAC,YAAY,GAAG,UAAC,CAAC,EAAA;QACrB,KAAI,CAAC,oBAAoB,CAAA,QAAA,CAAA;UACrB,IAAI,EAAE;QAAY,CAAA,EACf,0BAA0B,CAAC,CAAC,CAAC,CAAA,CAClC;MACN,CAAC;KACJ,MAAM;MACH,OAAO,CAAC,YAAY,GAAG,IAAI;;EAEnC,CAAC;EACL,OAAA,wBAAC;AAAD,CAtEA,CAA8C,YAAA,CAAA,UAAU,CAAA;AAA3C,OAAA,CAAA,wBAAA,GAAA,wBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1Bb,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AASA,IAAA,eAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAqC,SAAA,CAAA,eAAA,EAAA,MAAA,CAAA;EAArC,SAAA,eAAA,CAAA,EAAA;;EA6BA;EA5BI,eAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC;IAC7C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC;IAE1C,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;MAC9B,KAAI,CAAC,wBAAwB,CAAC;QAC1B,IAAI,EAAE,OAAO,CAAC;OACjB,CAAC;IACN,CAAC,CAAC;IAEF,OAAO,OAAO;EAClB,CAAC;EAED,eAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAA0B,EAAA;IAC1D,IAAI,YAAY,GAAG,OAA2B;IAE9C,IAAI,UAAU,CAAC,MAAM,KAAK,SAAS,EAAE;MACjC,YAAY,CAAC,IAAI,GAAG,UAAU,CAAC,MAAM,GAAG,UAAU,GAAG,MAAM;;IAG/D,IAAI,UAAU,CAAC,IAAI,KAAK,SAAS,EAAE;MAC/B,YAAY,CAAC,KAAK,GAAG,UAAU,CAAC,IAAI;;IAGxC,IAAI,UAAU,CAAC,WAAW,KAAK,SAAS,EAAE;MACtC,YAAY,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW;;EAEzD,CAAC;EACL,OAAA,eAAC;AAAD,CA7BA,CAAqC,YAAA,CAAA,UAAU,CAAA;AAAlC,OAAA,CAAA,eAAA,GAAA,eAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAOA,IAAA,iBAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAuC,SAAA,CAAA,iBAAA,EAAA,MAAA,CAAA;EAAvC,SAAA,iBAAA,CAAA,EAAA;;EASA;EARI,iBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,OAAO;EAClB,CAAC;EAED,iBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAA4B,EAAA;IAC5D,CAAA,CAAA,EAAA,KAAA,CAAA,gBAAgB,EAAC,OAAO,EAAE,UAAU,CAAC,OAAO,CAAC;EACjD,CAAC;EACL,OAAA,iBAAC;AAAD,CATA,CAAuC,YAAA,CAAA,UAAU,CAAA;AAApC,OAAA,CAAA,iBAAA,GAAA,iBAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;AAOA,IAAA,YAAA,GAAA,aAAA,UAAA,MAAA,EAAA;EAAkC,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;EAAlC,SAAA,YAAA,CAAA,EAAA;;EAoBA;EAnBI,YAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;IAAA,IAAA,KAAA,GAAA,IAAA;IACI,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;IAC3C,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC;IAEtC,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,YAAA;MAC9B,KAAI,CAAC,wBAAwB,CAAC;QAC1B,KAAK,EAAE,OAAO,CAAC,WAAW,KAAK;OAClC,CAAC;IACN,CAAC,CAAC;IAEF,OAAO,OAAO;EAClB,CAAC;EAED,YAAA,CAAA,SAAA,CAAA,aAAa,GAAb,UAAc,OAAoB,EAAE,UAAsB,EAAA;IACtD,IAAI,UAAU,CAAC,KAAK,KAAK,SAAS,EAAE;MAChC,OAAO,CAAC,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAA,CAAE;MACjD,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,UAAU,CAAC,KAAK,GAAG,OAAO,GAAG,KAAK;;EAE1E,CAAC;EACL,OAAA,YAAC;AAAD,CApBA,CAAkC,YAAA,CAAA,UAAU,CAAA;AAA/B,OAAA,CAAA,YAAA,GAAA,YAAA;;;;;;;;;;;;;;;;;;ACPb,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;AACA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AACA,IAAA,UAAA,GAAA,OAAA,CAAA,YAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA,IAAA,oBAAA,GAAA,OAAA,CAAA,sBAAA,CAAA;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AACA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA;AAGA,IAAM,YAAY,GAAG,iBAAiB;AACtC,IAAM,eAAe,GAAG,oBAAoB;AAE5C,IAAI,MAAM,GAAqB,IAAI;AACxB,OAAA,CAAA,WAAW,GAAG,EAAE;AAE3B,IAAM,mBAAmB,GAAG,IAAI,OAAO,CAAA,CAA2B;AAElE,SAAgB,UAAU,CAAC,KAAY,EAAA;EAC5B,IAAA,CAAC,GAAa,KAAK,CAAA,CAAA,CAAlB;IAAE,CAAC,GAAU,KAAK,CAAA,CAAA,CAAf;IAAE,CAAC,GAAO,KAAK,CAAA,CAAA,CAAZ;IAAE,CAAC,GAAI,KAAK,CAAA,CAAA,CAAT;EACjB,OAAO,OAAA,CAAA,MAAA,CAAQ,CAAC,GAAG,GAAG,EAAA,IAAA,CAAA,CAAA,MAAA,CAAK,CAAC,GAAG,GAAG,EAAA,IAAA,CAAA,CAAA,MAAA,CAAK,CAAC,GAAG,GAAG,EAAA,IAAA,CAAA,CAAA,MAAA,CAAK,CAAC,EAAA,GAAA,CAAG;AAC3D;AAHA,OAAA,CAAA,UAAA,GAAA,UAAA;AAKA,SAAgB,SAAS,CAAC,IAAU,EAAA;EAChC;EACA,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;IACvB,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;;EAGjC;EACA,IAAI,IAAI,CAAC,IAAI,KAAK,gBAAgB,EAAE;IAChC,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;MACxB,OAAO,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;IAGvC,IAAI,WAAW,GAAa,EAAE;IAC9B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;MACxC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5B,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC/B,WAAW,CAAC,IAAI,CAAC,EAAA,CAAA,MAAA,CAAG,UAAU,CAAC,KAAK,CAAC,EAAA,GAAA,CAAA,CAAA,MAAA,CAAI,QAAQ,GAAG,GAAG,EAAA,GAAA,CAAG,CAAC;;IAG/D,OAAO,kBAAA,CAAA,MAAA,CAAmB,IAAI,CAAC,YAAY,EAAA,OAAA,CAAA,CAAA,MAAA,CAAQ,WAAW,CAAC,IAAI,CAC/D,IAAI,CACP,EAAA,GAAA,CAAG;;EAGR;EACA,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;IACvB,IAAI,MAAM,GAAG,OAAA,CAAA,MAAA,CAAQ,IAAI,CAAC,QAAQ,EAAA,IAAA,CAAI;IAEtC,IAAI,IAAI,CAAC,QAAQ,IAAI,KAAK,EAAE;MACxB,OAAO,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,2BAAA,CAA2B;KAC9C,MAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;MACnC,OAAO,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,uBAAA,CAAuB;KAC1C,MAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;MAChC,OAAO,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,kBAAA,CAAkB;KACrC,MAAM,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,EAAE;MAChC,OAAO,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,yBAAA,CAAyB;KAC5C,MAAM;MACH;MACA;MACA,MAAM,oCAAA,CAAA,MAAA,CAAqC,IAAI,CAAC,IAAI,CAAE;;;EAI9D;EACA;EACA,MAAM,qBAAA,CAAA,MAAA,CAAsB,IAAI,CAAC,IAAI,CAAE;AAC3C;AA9CA,OAAA,CAAA,SAAA,GAAA,SAAA;AAgDA,IAAM,aAAa,GAAG;EAClB,gBAAgB,EAAE,QAAA,CAAA,YAAY;EAC9B,kBAAkB,EAAE,UAAA,CAAA,cAAc;EAClC,4BAA4B,EAAE,oBAAA,CAAA,wBAAwB;EACtD,WAAW,EAAE,aAAA,CAAA,iBAAiB;EAC9B,mBAAmB,EAAE,WAAA,CAAA,eAAe;EACpC,aAAa,EAAE,KAAA,CAAA,SAAS;EACxB,eAAe,EAAE,OAAA,CAAA,WAAW;EAC5B,gBAAgB,EAAE,QAAA,CAAA,YAAY;EAC9B,cAAc,EAAE,MAAA,CAAA,UAAU;EAC1B,mBAAmB,EAAE,WAAA,CAAA;CACxB;AAED,UAAU,CAAC,aAAa,GAAG,aAAa;AAExC,SAAS,cAAc,CAAC,OAAY,EAAA;EAChC,OAAO,CAAC,GAAG,CAAC,oBAAoB,EAAE,OAAO,CAAC;EAE1C,IAAI,OAAO,CAAC,IAAI,IAAI,oBAAoB,EAAE;IACtC,kBAAkB,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,YAAY,CAAC;GAChE,MAAM,IAAI,OAAO,CAAC,IAAI,IAAI,oBAAoB,EAAE;IAC7C,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;GACjC,MAAM;IACH,MAAM,oCAAA,CAAA,MAAA,CAAqC,OAAO,CAAE;;AAE5D;AAEA,SAAS,kBAAkB,CACvB,OAAsC,EACtC,YAA2B,EAAA;EAE3B;EACA;EACA,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;EACjD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;EACxC,aAAa,CAAC,EAAE,GAAG,uBAAuB;EAC1C,aAAa,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM;EAEpC;EACA;EACA,KAAK,IAAI,EAAE,IAAI,OAAO,EAAE;IACpB,IAAI,UAAU,GAAG,OAAO,CAAC,EAAE,CAAC;IAC5B,IAAI,SAAS,GAAG,YAAA,CAAA,MAAA,CAAa,EAAE,CAAE;IACjC,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,CAAC;IAEhD;IACA,IAAI,OAAO,EAAE;MACT;;IAGJ;IACA,IAAM,WAAW,GAAG,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC;IAEpD;IACA,IAAI,CAAC,WAAW,EAAE;MACd,MAAM,mCAAA,CAAA,MAAA,CAAoC,UAAU,CAAC,MAAM,CAAE;;IAGjE;IACA,IAAI,QAAQ,GAAe,IAAI,WAAW,CAAC,SAAS,EAAE,UAAU,CAAC;IAEjE;IACA,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAA,CAAE;IAElC;IACA,OAAO,CAAC,EAAE,GAAG,SAAS;IAEtB;IACA,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,eAAe,CAAC;IAEtC;IACA,OAAO,CAAC,YAAY,CAAC,cAAc,EAAE,UAAU,CAAC,aAAa,CAAC;IAE9D;IACA,IAAI,GAAG,GAAG,UAAU,CAAC,KAAK,CAAC;IAC3B,IAAI,GAAG,KAAK,SAAS,EAAE;MACnB,OAAO,CAAC,YAAY,CAAC,SAAS,EAAE,EAAA,CAAA,MAAA,CAAG,GAAG,CAAE,CAAC;;IAG7C;IACA,mBAAmB,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC;IAE1C;IACA,aAAa,CAAC,WAAW,CAAC,OAAO,CAAC;;EAGtC;EACA,KAAK,IAAI,EAAE,IAAI,OAAO,EAAE;IACpB,IAAI,UAAU,GAAG,OAAO,CAAC,EAAE,CAAC;IAC5B,IAAI,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,GAAG,EAAE,CAAC;IAExD,IAAI,CAAC,OAAO,EAAE;MACV,MAAM,gCAAA,CAAA,MAAA,CAAiC,EAAE,EAAA,mCAAA,CAAmC;;IAGhF;IACA,YAAY,CAAC,OAAQ,EAAE,UAAU,CAAC;IAElC;IACA,IAAI,QAAQ,GAAG,mBAAmB,CAAC,GAAG,CAAC,OAAQ,CAAe;IAC9D,QAAQ,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC;IAE3C;IACA,QAAQ,CAAC,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,EACP,QAAQ,CAAC,KAAK,CAAA,EACd,UAAU,CAChB;;EAGL;EACA,IAAI,YAAY,KAAK,IAAI,EAAE;IACvB,IAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAA,CAAA,MAAA,CAAa,YAAY,CAAE,CAAC;IACtE,QAAQ,CAAC,IAAI,CAAC,SAAS,GAAG,EAAE;IAC5B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,WAAY,CAAC;;EAG3C;EACA,aAAa,CAAC,MAAM,CAAA,CAAE;AAC1B;AAEA,SAAS,YAAY,CAAC,OAAoB,EAAE,KAAkB,EAAA;EAC1D,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,EAAE;IAC1B,IAAA,EAAA,GAA6B,KAAK,CAAC,QAAQ;MAA1C,IAAI,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,GAAG,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,MAAM,GAAA,EAAA,CAAA,CAAA,CAAkB;IAE/C,IAAI,IAAI,KAAK,IAAI,EAAE;MACf,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC;KAC9C,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,EAAA,CAAA,MAAA,CAAG,IAAI,EAAA,KAAA,CAAK;;IAG3C,IAAI,GAAG,KAAK,IAAI,EAAE;MACd,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC;KAC7C,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,EAAA,CAAA,MAAA,CAAG,GAAG,EAAA,KAAA,CAAK;;IAGzC,IAAI,KAAK,KAAK,IAAI,EAAE;MAChB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC;KAC/C,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,WAAW,GAAG,EAAA,CAAA,MAAA,CAAG,KAAK,EAAA,KAAA,CAAK;;IAG7C,IAAI,MAAM,KAAK,IAAI,EAAE;MACjB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,eAAe,CAAC;KAChD,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,YAAY,GAAG,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,KAAA,CAAK;;;EAInD,IAAI,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;IACxB,IAAA,EAAA,GAAkB,KAAK,CAAC,MAAM;MAA7B,KAAK,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,MAAM,GAAA,EAAA,CAAA,CAAA,CAAgB;IAElC,IAAI,KAAK,KAAK,IAAI,EAAE;MAChB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC;KACxC,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,EAAA,CAAA,MAAA,CAAG,KAAK,EAAA,KAAA,CAAK;;IAGvC,IAAI,MAAM,KAAK,IAAI,EAAE;MACjB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC;KACzC,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,EAAA,CAAA,MAAA,CAAG,MAAM,EAAA,KAAA,CAAK;;;EAI7C,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,EAAE;IACzB,IAAA,EAAA,GAAqB,KAAK,CAAC,OAAO;MAAjC,OAAO,GAAA,EAAA,CAAA,CAAA,CAAA;MAAE,OAAO,GAAA,EAAA,CAAA,CAAA,CAAiB;IAEtC,IAAI,WAAW,GAAA,KAAA,CAAA;IACf,IAAI,OAAO,KAAK,IAAI,EAAE;MAClB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC;MACpC,WAAW,GAAG,CAAC;MAEf,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,aAAa,EAAE;QACvC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC;;KAE5C,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,IAAI,GAAG,EAAA,CAAA,MAAA,CAAG,OAAO,GAAG,GAAG,EAAA,GAAA,CAAG;MACxC,WAAW,GAAG,OAAO,GAAG,CAAC,GAAG;MAE5B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE;QACtB,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,aAAa;;;IAI3C,IAAI,WAAW,GAAA,KAAA,CAAA;IACf,IAAI,OAAO,KAAK,IAAI,EAAE;MAClB,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC;MACnC,WAAW,GAAG,CAAC;MAEf,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,KAAK,aAAa,EAAE;QACxC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC;;KAE7C,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,GAAG,GAAG,EAAA,CAAA,MAAA,CAAG,OAAO,GAAG,GAAG,EAAA,GAAA,CAAG;MACvC,WAAW,GAAG,OAAO,GAAG,CAAC,GAAG;MAE5B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE;QACvB,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,aAAa;;;IAI5C,IAAI,WAAW,KAAK,CAAC,IAAI,WAAW,KAAK,CAAC,EAAE;MACxC,OAAO,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC;KAC5C,MAAM;MACH,OAAO,CAAC,KAAK,CAAC,SAAS,GAAG,YAAA,CAAA,MAAA,CAAa,WAAW,EAAA,KAAA,CAAA,CAAA,MAAA,CAAM,WAAW,EAAA,IAAA,CAAI;;;AAGnF;AAEA,SAAgB,gBAAgB,CAC5B,aAA0B,EAC1B,OAAkC,EAAA;EAElC;EACA,IAAI,OAAO,KAAK,SAAS,EAAE;IACvB;;EAGJ;EACA,IAAI,OAAO,KAAK,IAAI,EAAE;IAClB,aAAa,CAAC,SAAS,GAAG,EAAE;IAC5B;;EAGJ,IAAM,mBAAmB,GAAG,aAAa,CAAC,iBAAiB;EAE3D;EACA;EACA,IAAI,mBAAmB,KAAK,IAAI,EAAE;IAC9B;IACA;IACA,IAAI,mBAAmB,CAAC,EAAE,KAAK,YAAA,CAAA,MAAA,CAAa,OAAO,CAAE,EAAE;MACnD;;IAGJ;IACA;IACA,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAC;IACpE,aAAa,KAAA,IAAA,IAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,WAAW,CAAC,mBAAmB,CAAC;;EAGnD;EACA,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,GAAG,OAAO,CAAC;EAEhE,IAAI,CAAC,UAAU,EAAE;IACb,MAAM,4CAAA,CAAA,MAAA,CAA6C,OAAO,CAAE;;EAGhE,aAAa,KAAA,IAAA,IAAb,aAAa,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAb,aAAa,CAAE,WAAW,CAAC,UAAU,CAAC;AAC1C;AAxCA,OAAA,CAAA,gBAAA,GAAA,gBAAA;AA0CA,SAAgB,eAAe,CAC3B,aAA0B,EAC1B,QAA8B,EAAA;EAE9B;EACA,IAAI,QAAQ,KAAK,SAAS,EAAE;IACxB;;EAGJ,IAAI,aAAa,GAAG,QAAQ,CAAC,cAAc,CAAC,uBAAuB,CAAE;EAErE,IAAI,UAAU,GAAG,aAAa,CAAC,iBAAiB;EAChD,IAAI,UAAU,GAAG,CAAC;EAElB,OAAO,IAAI,EAAE;IACT;IACA;IACA,IAAI,UAAU,KAAK,IAAI,EAAE;MACrB,OAAO,UAAU,GAAG,QAAQ,CAAC,MAAM,EAAE;QACjC,IAAI,OAAK,GAAG,QAAQ,CAAC,UAAU,CAAC;QAChC,IAAI,YAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,GAAG,OAAK,CAAC;QAC9D,aAAa,CAAC,WAAW,CAAC,YAAW,CAAC;QACtC,UAAU,EAAE;;MAEhB;;IAGJ;IACA;IACA,IAAI,UAAU,IAAI,QAAQ,CAAC,MAAM,EAAE;MAC/B,OAAO,UAAU,KAAK,IAAI,EAAE;QACxB,IAAI,WAAW,GAAG,UAAU,CAAC,kBAAkB;QAC/C,aAAa,CAAC,WAAW,CAAC,UAAU,CAAC;QACrC,UAAU,GAAG,WAAW;;MAE5B;;IAGJ;IACA,IAAI,KAAK,GAAG,QAAQ,CAAC,UAAU,CAAC;IAChC,IAAI,UAAU,CAAC,EAAE,KAAK,YAAY,GAAG,KAAK,EAAE;MACxC,UAAU,GAAG,UAAU,CAAC,kBAAkB;MAC1C,UAAU,EAAE;MACZ;;IAGJ;IACA;IACA,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,GAAG,KAAK,CAAC;IAC9D,aAAa,CAAC,YAAY,CAAC,UAAW,EAAE,UAAU,CAAC;IACnD,UAAU,EAAE;;AAEpB;AApDA,OAAA,CAAA,eAAA,GAAA,eAAA;AAsDA,SAAS,IAAI,CAAA,EAAA;EACT;EACA,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;EAC3C,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM;EAC7B,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;EAClC,OAAA,CAAA,WAAW,GAAG,OAAO,CAAC,YAAY,GAAG,EAAE;EACvC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;EAElC;EACA,OAAO,CAAC,GAAG,CAAC,aAAA,CAAA,MAAA,CAAc,eAAe,CAAC,MAAM,EAAA,qBAAA,CAAqB,CAAC;EACtE,KAAoB,IAAA,EAAA,GAAA,CAAe,EAAf,iBAAA,GAAA,eAAe,EAAf,EAAA,GAAA,iBAAA,CAAA,MAAe,EAAf,EAAA,EAAe,EAAE;IAAhC,IAAI,OAAO,GAAA,iBAAA,CAAA,EAAA,CAAA;IACZ,cAAc,CAAC,OAAO,CAAC;;EAG3B;EACA,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,mBAAA,CAAA,MAAA,CAAoB,YAAY,CAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC;EAC3E,GAAG,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC;EACjD,OAAO,CAAC,GAAG,CAAC,0BAAA,CAAA,MAAA,CAA2B,GAAG,CAAC,IAAI,CAAE,CAAC;EAClD,MAAM,GAAG,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;EAEhC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,CAAC;EACvC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC;EAC7C,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC;EACzC,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC;AAC7C;AAEA,SAAS,MAAM,CAAA,EAAA;EACX,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC;AACpC;AAEA,SAAS,SAAS,CAAC,KAAU,EAAA;EACzB;EACA,IAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC;EAEpC;EACA,cAAc,CAAC,OAAO,CAAC;AAC3B;AAEA,SAAS,OAAO,CAAC,KAAU,EAAA;EACvB,OAAO,CAAC,GAAG,CAAC,SAAA,CAAA,MAAA,CAAU,KAAK,CAAC,OAAO,CAAE,CAAC;AAC1C;AAEA,SAAS,OAAO,CAAC,KAAU,EAAA;EACvB,OAAO,CAAC,GAAG,CAAC,qBAAA,CAAA,MAAA,CAAsB,KAAK,CAAC,MAAM,CAAE,CAAC;AACrD;AAEA,SAAgB,wBAAwB,CAAC,OAAe,EAAA;EACpD,IAAI,CAAC,MAAM,EAAE;IACT,OAAO,CAAC,GAAG,CACP,iEAAA,CAAA,MAAA,CAAkE,OAAO,CAAE,CAC9E;IACD;;EAGJ,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AACxC;AATA,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAWA,IAAI,CAAA,CAAE","file":"app.js","sourceRoot":"","sourcesContent":["import { sendMessageOverWebsocket } from './app';\n\n/// Base for all widget states. Updates received from the backend are partial,\n/// hence most properties may be undefined.\nexport type WidgetState = {\n    _type_: string;\n    _python_type_: string;\n    _key_?: string;\n    _margin_?: [number, number, number, number];\n    _size_?: [number | null, number | null];\n    _align_?: [number | null, number | null];\n};\n\n/// Base class for all widgets\nexport abstract class WidgetBase {\n    elementId: string;\n    state: object;\n\n    constructor(elementId: string, state: WidgetState) {\n        this.elementId = elementId;\n        this.state = state;\n    }\n\n    /// Fetches the HTML element associated with this widget. This is a slow\n    /// operation and should be avoided if possible.\n    get element() {\n        let element = document.getElementById(this.elementId);\n\n        if (element === null) {\n            throw new Error(\n                `Instance for element with id ${this.elementId} cannot find its element`\n            );\n        }\n\n        return element;\n    }\n\n    /// Creates the HTML element associated with this widget. This function does\n    /// not attach the element to the DOM, but merely returns it.\n    abstract createElement(): HTMLElement;\n\n    /// Given a partial state update, this function updates the widget's HTML\n    /// element to reflect the new state.\n    ///\n    /// The `element` parameter is identical to `this.element`. Calling that\n    /// property is slow however, so it is passed as argument here, to avoid\n    /// accidentally calling the property multiple times.\n    abstract updateElement(element: HTMLElement, deltaState: WidgetState): void;\n\n    /// Send a message to the python instance corresponding to this widget. The\n    /// message is an arbitrary JSON object and will be passed to the instance's\n    /// `_on_message` method.\n    sendMessageToBackend(message: object) {\n        sendMessageOverWebsocket({\n            type: 'widgetMessage',\n            // Remove the leading `reflex-id-` from the element's ID\n            widgetId: parseInt(this.elementId.substring(10)),\n            payload: message,\n        });\n    }\n\n    _setStateDontNotifyBackend(deltaState: object) {\n        this.state = {\n            ...this.state,\n            ...deltaState,\n        };\n    }\n\n    setStateAndNotifyBackend(deltaState: object) {\n        this._setStateDontNotifyBackend(deltaState);\n        sendMessageOverWebsocket({\n            type: 'widgetStateUpdate',\n            // Remove the leading `reflex-id-` from the element's ID\n            widgetId: parseInt(this.elementId.substring(10)),\n            deltaState: deltaState,\n        });\n    }\n}\n\nglobalThis.WidgetBase = WidgetBase;\n","import { Color } from './models';\nimport { colorToCss } from './app';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\nexport type TextState = WidgetState & {\n    text?: string;\n    multiline?: boolean;\n    font?: string;\n    font_color?: Color;\n    font_size?: number;\n    font_weight?: string;\n    italic?: boolean;\n    underlined?: boolean;\n};\n\nexport class TextWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-text');\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: TextState): void {\n        if (deltaState.text !== undefined) {\n            element.innerText = deltaState.text;\n        }\n\n        if (deltaState.multiline !== undefined) {\n            element.style.whiteSpace = deltaState.multiline\n                ? 'normal'\n                : 'nowrap';\n        }\n\n        if (deltaState.font !== undefined) {\n            element.style.fontFamily = deltaState.font;\n        }\n\n        if (deltaState.font_color !== undefined) {\n            element.style.color = colorToCss(deltaState.font_color);\n        }\n\n        if (deltaState.font_size !== undefined) {\n            element.style.fontSize = deltaState.font_size + 'rem';\n        }\n\n        if (deltaState.font_weight !== undefined) {\n            element.style.fontWeight = deltaState.font_weight;\n        }\n\n        if (deltaState.italic !== undefined) {\n            element.style.fontStyle = deltaState.italic ? 'italic' : 'normal';\n        }\n\n        if (deltaState.underlined !== undefined) {\n            element.style.textDecoration = deltaState.underlined\n                ? 'underline'\n                : 'none';\n        }\n    }\n}\n","import { replaceChildren } from './app';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\nexport type RowState = WidgetState & {\n    _type_: 'row';\n    children?: number[];\n    spacing?: number;\n};\n\nexport class RowWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-row');\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: RowState): void {\n        replaceChildren(element, deltaState.children);\n\n        if (deltaState.spacing !== undefined) {\n            element.style.gap = `${deltaState.spacing}rem`;\n        }\n    }\n}\n","import { replaceChildren } from './app';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\ntype ColumnState = WidgetState & {\n    _type_: 'column';\n    children?: number[];\n    spacing?: number;\n};\n\nexport class ColumnWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-column');\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: ColumnState): void {\n        replaceChildren(element, deltaState.children);\n\n        if (deltaState.spacing !== undefined) {\n            element.style.gap = `${deltaState.spacing}rem`;\n        }\n    }\n}\n","import { WidgetBase, WidgetState } from './widgetBase';\n\nexport type DropdownState = WidgetState & {\n    _type_: 'dropdown';\n    optionNames?: string[];\n};\n\nexport class DropdownWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('select');\n        element.classList.add('reflex-dropdown');\n\n        element.addEventListener('input', () => {\n            this.setStateAndNotifyBackend({\n                value: element.value,\n            });\n        });\n\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: DropdownState): void {\n        if (deltaState.optionNames !== undefined) {\n            element.innerHTML = '';\n\n            for (let optionName of deltaState.optionNames) {\n                let option = document.createElement('option');\n                option.value = optionName;\n                option.text = optionName;\n                element.appendChild(option);\n            }\n        }\n    }\n}\n","import { colorToCss, fillToCss, replaceOnlyChild } from './app';\nimport { Color, Fill } from './models';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\nexport type RectangleState = WidgetState & {\n    _type_: 'rectangle';\n    fill?: Fill;\n    child?: number;\n    corner_radius?: [number, number, number, number];\n    stroke_width?: number;\n    stroke_color?: Color;\n};\n\nexport class RectangleWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-rectangle');\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: RectangleState): void {\n        replaceOnlyChild(element, deltaState.child);\n\n        if (deltaState.fill !== undefined) {\n            element.style.background = fillToCss(deltaState.fill);\n        }\n\n        if (deltaState.corner_radius !== undefined) {\n            const [topLeft, topRight, bottomRight, bottomLeft] =\n                deltaState.corner_radius;\n            element.style.borderRadius = `${topLeft}rem ${topRight}rem ${bottomRight}rem ${bottomLeft}rem`;\n        }\n\n        if (deltaState.stroke_width !== undefined) {\n            element.style.borderWidth = `${deltaState.stroke_width}rem`;\n        }\n\n        if (deltaState.stroke_color !== undefined) {\n            if (deltaState.stroke_color === null) {\n                element.style.borderColor = 'transparent';\n            } else {\n                element.style.borderColor = colorToCss(deltaState.stroke_color);\n            }\n        }\n    }\n}\n","import { replaceChildren } from './app';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\nexport type StackState = WidgetState & {\n    _type_: 'stack';\n    children?: number[];\n};\n\nexport class StackWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-stack');\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: StackState): void {\n        if (deltaState.children !== undefined) {\n            replaceChildren(element, deltaState.children);\n\n            let zIndex = 0;\n            for (let child of element.children) {\n                (child as HTMLElement).style.zIndex = `${zIndex}`;\n                zIndex += 1;\n            }\n        }\n    }\n}\n","import { pixelsPerEm, replaceOnlyChild } from './app';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\nfunction eventMouseButtonToString(event: MouseEvent): object {\n    return {\n        button: ['left', 'middle', 'right'][event.button],\n    };\n}\n\nfunction eventMousePositionToString(event: MouseEvent): object {\n    return {\n        x: event.clientX / pixelsPerEm,\n        y: event.clientY / pixelsPerEm,\n    };\n}\n\nexport type MouseEventListenerState = WidgetState & {\n    _type_: 'mouseEventListener';\n    child?: number;\n    reportMouseDown?: boolean;\n    reportMouseUp?: boolean;\n    reportMouseMove?: boolean;\n    reportMouseEnter?: boolean;\n    reportMouseLeave?: boolean;\n};\n\nexport class MouseEventListenerWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-mouse-event-listener');\n        return element;\n    }\n\n    updateElement(\n        element: HTMLElement,\n        deltaState: MouseEventListenerState\n    ): void {\n        replaceOnlyChild(element, deltaState.child);\n\n        if (deltaState.reportMouseDown) {\n            element.onmousedown = (e) => {\n                this.sendMessageToBackend({\n                    type: 'mouseDown',\n                    ...eventMouseButtonToString(e),\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmousedown = null;\n        }\n\n        if (deltaState.reportMouseUp) {\n            element.onmouseup = (e) => {\n                this.sendMessageToBackend({\n                    type: 'mouseUp',\n                    ...eventMouseButtonToString(e),\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmouseup = null;\n        }\n\n        if (deltaState.reportMouseMove) {\n            element.onmousemove = (e) => {\n                this.sendMessageToBackend({\n                    type: 'mouseMove',\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmousemove = null;\n        }\n\n        if (deltaState.reportMouseEnter) {\n            element.onmouseenter = (e) => {\n                this.sendMessageToBackend({\n                    type: 'mouseEnter',\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmouseenter = null;\n        }\n\n        if (deltaState.reportMouseLeave) {\n            element.onmouseleave = (e) => {\n                this.sendMessageToBackend({\n                    type: 'mouseLeave',\n                    ...eventMousePositionToString(e),\n                });\n            };\n        } else {\n            element.onmouseleave = null;\n        }\n    }\n}\n","import { WidgetBase, WidgetState } from './widgetBase';\n\nexport type TextInputState = WidgetState & {\n    _type_: 'textInput';\n    text?: string;\n    placeholder?: string;\n    secret?: boolean;\n};\n\nexport class TextInputWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('input');\n        element.classList.add('reflex-text-input');\n\n        element.addEventListener('input', () => {\n            this.setStateAndNotifyBackend({\n                text: element.value,\n            });\n        });\n\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: TextInputState): void {\n        let cast_element = element as HTMLInputElement;\n\n        if (deltaState.secret !== undefined) {\n            cast_element.type = deltaState.secret ? 'password' : 'text';\n        }\n\n        if (deltaState.text !== undefined) {\n            cast_element.value = deltaState.text;\n        }\n\n        if (deltaState.placeholder !== undefined) {\n            cast_element.placeholder = deltaState.placeholder;\n        }\n    }\n}\n","import { replaceOnlyChild } from './app';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\nexport type PlaceholderState = WidgetState & {\n    _type_: 'placeholder';\n    _child_?: number;\n};\n\nexport class PlaceholderWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: PlaceholderState): void {\n        replaceOnlyChild(element, deltaState._child_);\n    }\n}\n","import { WidgetBase, WidgetState } from './widgetBase';\n\nexport type SwitchJson = WidgetState & {\n    _type_: 'switch';\n    is_on?: boolean;\n};\n\nexport class SwitchWidget extends WidgetBase {\n    createElement(): HTMLElement {\n        let element = document.createElement('div');\n        element.classList.add('reflex-switch');\n\n        element.addEventListener('click', () => {\n            this.setStateAndNotifyBackend({\n                is_on: element.textContent !== 'true',\n            });\n        });\n\n        return element;\n    }\n\n    updateElement(element: HTMLElement, deltaState: SwitchJson): void {\n        if (deltaState.is_on !== undefined) {\n            element.textContent = deltaState.is_on.toString();\n            element.style.backgroundColor = deltaState.is_on ? 'green' : 'red';\n        }\n    }\n}\n","import { TextWidget } from './text';\nimport { RowWidget } from './row';\nimport { ColumnWidget } from './column';\nimport { DropdownWidget } from './dropdown';\nimport { RectangleWidget } from './rectangle';\nimport { StackWidget } from './stack';\nimport { Color, Fill } from './models';\nimport { MouseEventListenerWidget } from './mouseEventListener';\nimport { TextInputWidget } from './textInput';\nimport { PlaceholderWidget } from './placeholder';\nimport { SwitchWidget } from './switch';\nimport { WidgetBase, WidgetState } from './widgetBase';\n\nconst sessionToken = '{session_token}';\nconst initialMessages = '{initial_messages}';\n\nlet socket: WebSocket | null = null;\nexport var pixelsPerEm = 16;\n\nconst elementsToInstances = new WeakMap<HTMLElement, WidgetBase>();\n\nexport function colorToCss(color: Color): string {\n    const [r, g, b, a] = color;\n    return `rgba(${r * 255}, ${g * 255}, ${b * 255}, ${a})`;\n}\n\nexport function fillToCss(fill: Fill): string {\n    // Solid Color\n    if (fill.type === 'solid') {\n        return colorToCss(fill.color);\n    }\n\n    // Linear Gradient\n    if (fill.type === 'linearGradient') {\n        if (fill.stops.length == 1) {\n            return colorToCss(fill.stops[0][0]);\n        }\n\n        let stopStrings: string[] = [];\n        for (let i = 0; i < fill.stops.length; i++) {\n            let color = fill.stops[i][0];\n            let position = fill.stops[i][1];\n            stopStrings.push(`${colorToCss(color)} ${position * 100}%`);\n        }\n\n        return `linear-gradient(${fill.angleDegrees}deg, ${stopStrings.join(\n            ', '\n        )})`;\n    }\n\n    // Image\n    if (fill.type === 'image') {\n        let cssUrl = `url('${fill.imageUrl}')`;\n\n        if (fill.fillMode == 'fit') {\n            return `${cssUrl} center/contain no-repeat`;\n        } else if (fill.fillMode == 'stretch') {\n            return `${cssUrl} top left / 100% 100%`;\n        } else if (fill.fillMode == 'tile') {\n            return `${cssUrl} left top repeat`;\n        } else if (fill.fillMode == 'zoom') {\n            return `${cssUrl} center/cover no-repeat`;\n        } else {\n            // Invalid fill mode\n            // @ts-ignore\n            throw `Invalid fill mode for image fill: ${fill.type}`;\n        }\n    }\n\n    // Invalid fill type\n    // @ts-ignore\n    throw `Invalid fill type: ${fill.type}`;\n}\n\nconst widgetClasses = {\n    'Column-builtin': ColumnWidget,\n    'Dropdown-builtin': DropdownWidget,\n    'MouseEventListener-builtin': MouseEventListenerWidget,\n    Placeholder: PlaceholderWidget,\n    'Rectangle-builtin': RectangleWidget,\n    'Row-builtin': RowWidget,\n    'Stack-builtin': StackWidget,\n    'Switch-builtin': SwitchWidget,\n    'Text-builtin': TextWidget,\n    'TextInput-builtin': TextInputWidget,\n};\n\nglobalThis.widgetClasses = widgetClasses;\n\nfunction processMessage(message: any) {\n    console.log('Received message: ', message);\n\n    if (message.type == 'updateWidgetStates') {\n        updateWidgetStates(message.deltaStates, message.rootWidgetId);\n    } else if (message.type == 'evaluateJavascript') {\n        eval(message.javascriptSource);\n    } else {\n        throw `Encountered unknown message type: ${message}`;\n    }\n}\n\nfunction updateWidgetStates(\n    message: { [id: number]: WidgetState },\n    rootWidgetId: number | null\n) {\n    // Create a HTML element to hold all latent widgets, so they aren't\n    // garbage collected while updating the DOM.\n    let latentWidgets = document.createElement('div');\n    document.body.appendChild(latentWidgets);\n    latentWidgets.id = 'reflex-latent-widgets';\n    latentWidgets.style.display = 'none';\n\n    // Make sure all widgets mentioned in the message have a corresponding HTML\n    // element\n    for (let id in message) {\n        let deltaState = message[id];\n        let elementId = `reflex-id-${id}`;\n        let element = document.getElementById(elementId);\n\n        // This is a reused element, nothing to do\n        if (element) {\n            continue;\n        }\n\n        // Get the class for this widget\n        const widgetClass = widgetClasses[deltaState._type_];\n\n        // Make sure the widget type is valid (Just helpful for debugging)\n        if (!widgetClass) {\n            throw `Encountered unknown widget type: ${deltaState._type_}`;\n        }\n\n        // Create an instance for this widget\n        let instance: WidgetBase = new widgetClass(elementId, deltaState);\n\n        // Build the widget\n        element = instance.createElement();\n\n        // Add a unique ID to the widget\n        element.id = elementId;\n\n        // Add the common css class to the widget\n        element.classList.add('reflex-widget');\n\n        // Store the widget's class name in the element. Used for debugging.\n        element.setAttribute('dbg-py-class', deltaState._python_type_);\n\n        // Set the widget's key, if it has one. Used for debugging.\n        let key = deltaState['key'];\n        if (key !== undefined) {\n            element.setAttribute('dbg-key', `${key}`);\n        }\n\n        // Create a mapping from the element to the widget instance\n        elementsToInstances.set(element, instance);\n\n        // Keep the widget alive\n        latentWidgets.appendChild(element);\n    }\n\n    // Update all widgets mentioned in the message\n    for (let id in message) {\n        let deltaState = message[id];\n        let element = document.getElementById('reflex-id-' + id);\n\n        if (!element) {\n            throw `Failed to find widget with id ${id}, despite only just creating it!?`;\n        }\n\n        // Perform updates common to all widgets\n        commonUpdate(element!, deltaState);\n\n        // Perform updates specific to this widget type\n        let instance = elementsToInstances.get(element!) as WidgetBase;\n        instance.updateElement(element, deltaState);\n\n        // Update the widget's state\n        instance.state = {\n            ...instance.state,\n            ...deltaState,\n        };\n    }\n\n    // Replace the root widget if requested\n    if (rootWidgetId !== null) {\n        let rootElement = document.getElementById(`reflex-id-${rootWidgetId}`);\n        document.body.innerHTML = '';\n        document.body.appendChild(rootElement!);\n    }\n\n    // Remove the latent widgets\n    latentWidgets.remove();\n}\n\nfunction commonUpdate(element: HTMLElement, state: WidgetState) {\n    if (state._margin_ !== undefined) {\n        let [left, top, right, bottom] = state._margin_;\n\n        if (left === null) {\n            element.style.removeProperty('margin-left');\n        } else {\n            element.style.marginLeft = `${left}rem`;\n        }\n\n        if (top === null) {\n            element.style.removeProperty('margin-top');\n        } else {\n            element.style.marginTop = `${top}rem`;\n        }\n\n        if (right === null) {\n            element.style.removeProperty('margin-right');\n        } else {\n            element.style.marginRight = `${right}rem`;\n        }\n\n        if (bottom === null) {\n            element.style.removeProperty('margin-bottom');\n        } else {\n            element.style.marginBottom = `${bottom}rem`;\n        }\n    }\n\n    if (state._size_ !== undefined) {\n        let [width, height] = state._size_;\n\n        if (width === null) {\n            element.style.removeProperty('width');\n        } else {\n            element.style.width = `${width}rem`;\n        }\n\n        if (height === null) {\n            element.style.removeProperty('height');\n        } else {\n            element.style.height = `${height}rem`;\n        }\n    }\n\n    if (state._align_ !== undefined) {\n        let [align_x, align_y] = state._align_;\n\n        let transform_x;\n        if (align_x === null) {\n            element.style.removeProperty('left');\n            transform_x = 0;\n\n            if (element.style.width === 'max-content') {\n                element.style.removeProperty('width');\n            }\n        } else {\n            element.style.left = `${align_x * 100}%`;\n            transform_x = align_x * -100;\n\n            if (!element.style.width) {\n                element.style.width = 'max-content';\n            }\n        }\n\n        let transform_y;\n        if (align_y === null) {\n            element.style.removeProperty('top');\n            transform_y = 0;\n\n            if (element.style.height === 'max-content') {\n                element.style.removeProperty('height');\n            }\n        } else {\n            element.style.top = `${align_y * 100}%`;\n            transform_y = align_y * -100;\n\n            if (!element.style.height) {\n                element.style.height = 'max-content';\n            }\n        }\n\n        if (transform_x === 0 && transform_y === 0) {\n            element.style.removeProperty('transform');\n        } else {\n            element.style.transform = `translate(${transform_x}%, ${transform_y}%)`;\n        }\n    }\n}\n\nexport function replaceOnlyChild(\n    parentElement: HTMLElement,\n    childId: null | undefined | number\n) {\n    // If undefined, do nothing\n    if (childId === undefined) {\n        return;\n    }\n\n    // If null, remove the child\n    if (childId === null) {\n        parentElement.innerHTML = '';\n        return;\n    }\n\n    const currentChildElement = parentElement.firstElementChild;\n\n    // If a child already exists, either move it to the latent container or\n    // leave it alone if it's already the correct element\n    if (currentChildElement !== null) {\n        // Don't reparent the child if not necessary. This way things like\n        // keyboard focus are preserved\n        if (currentChildElement.id === `reflex-id-${childId}`) {\n            return;\n        }\n\n        // Move the child element to a latent container, so it isn't garbage\n        // collected\n        let latentWidgets = document.getElementById('reflex-latent-widgets');\n        latentWidgets?.appendChild(currentChildElement);\n    }\n\n    // Add the replacement widget\n    let newElement = document.getElementById('reflex-id-' + childId);\n\n    if (!newElement) {\n        throw `Failed to find replacement widget with id ${childId}`;\n    }\n\n    parentElement?.appendChild(newElement);\n}\n\nexport function replaceChildren(\n    parentElement: HTMLElement,\n    childIds: undefined | number[]\n) {\n    // If undefined, do nothing\n    if (childIds === undefined) {\n        return;\n    }\n\n    let latentWidgets = document.getElementById('reflex-latent-widgets')!;\n\n    let curElement = parentElement.firstElementChild;\n    let curIdIndex = 0;\n\n    while (true) {\n        // If there are no more children in the DOM element, add the remaining\n        // children\n        if (curElement === null) {\n            while (curIdIndex < childIds.length) {\n                let curId = childIds[curIdIndex];\n                let newElement = document.getElementById('reflex-id-' + curId);\n                parentElement.appendChild(newElement!);\n                curIdIndex++;\n            }\n            break;\n        }\n\n        // If there are no more children in the message, remove the remaining\n        // DOM children\n        if (curIdIndex >= childIds.length) {\n            while (curElement !== null) {\n                let nextElement = curElement.nextElementSibling;\n                latentWidgets.appendChild(curElement);\n                curElement = nextElement;\n            }\n            break;\n        }\n\n        // This element is the correct element, move on\n        let curId = childIds[curIdIndex];\n        if (curElement.id === 'reflex-id-' + curId) {\n            curElement = curElement.nextElementSibling;\n            curIdIndex++;\n            continue;\n        }\n\n        // This element is not the correct element, insert the correct one\n        // instead\n        let newElement = document.getElementById('reflex-id-' + curId);\n        parentElement.insertBefore(newElement!, curElement);\n        curIdIndex++;\n    }\n}\n\nfunction main() {\n    // Determine the browser's font size\n    var measure = document.createElement('div');\n    measure.style.height = '10em';\n    document.body.appendChild(measure);\n    pixelsPerEm = measure.offsetHeight / 10;\n    document.body.removeChild(measure);\n\n    // Process initial messages\n    console.log(`Processing ${initialMessages.length} initial message(s)`);\n    for (let message of initialMessages) {\n        processMessage(message);\n    }\n\n    // Connect to the websocket\n    var url = new URL(`/ws?sessionToken=${sessionToken}`, window.location.href);\n    url.protocol = url.protocol.replace('http', 'ws');\n    console.log(`Connecting websocket to ${url.href}`);\n    socket = new WebSocket(url.href);\n\n    socket.addEventListener('open', onOpen);\n    socket.addEventListener('message', onMessage);\n    socket.addEventListener('error', onError);\n    socket.addEventListener('close', onClose);\n}\n\nfunction onOpen() {\n    console.log('Connection opened');\n}\n\nfunction onMessage(event: any) {\n    // Parse the message JSON\n    let message = JSON.parse(event.data);\n\n    // Handle it\n    processMessage(message);\n}\n\nfunction onError(event: any) {\n    console.log(`Error: ${event.message}`);\n}\n\nfunction onClose(event: any) {\n    console.log(`Connection closed: ${event.reason}`);\n}\n\nexport function sendMessageOverWebsocket(message: object) {\n    if (!socket) {\n        console.log(\n            `Attempted to send message, but the websocket is not connected: ${message}`\n        );\n        return;\n    }\n\n    socket.send(JSON.stringify(message));\n}\n\nmain();\n"]}